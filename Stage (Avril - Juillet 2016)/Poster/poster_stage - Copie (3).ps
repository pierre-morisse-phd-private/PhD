%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: C:/Users/moris/Cours/M2/Stage/Poster/poster_stage - Copie (3).dvi
%%CreationDate: Tue Jun 21 17:33:56 2016
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 2594 3402
%%DocumentFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic
%%+ CMMI12 CMSY10 CMR12 CMR17
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Users\moris\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\dvips.exe"
%+ -P pdf
%+ "C:/Users/moris/Cours/M2/Stage/Poster/poster_stage - Copie (3).dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2016.06.21:1733
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: ./a0header.ps 0 0
%%BeginFeature *PageSize ISOA0/ISO A0
2 dict dup /PageSize [2594 3370] put dup /ImagingBBox null put
setpagedevice
%%EndFeature

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B01A190FD830741285B001D05FA4E85693A5DC3207DBCBD7BED7D230C72945A2
D7CBD8E7A0C607F80A4C94CACE846F19B5B15D74CB090F8360C05DBC6BAA5BAA
1CDC394C23B0F46FBA30A15F33344F44E47C17A79B98AAD61952AC0AD2D2B38A
E272F20B3F66F8B1E65BC0C4729108DE73387F7626BFAA1883534E6966E13B41
C5423FA7A4E8D553FB5E65AF931B67EB8F6FBBB74948BAAA9B4E489D3E52B9BD
77ADEDE2D1591B52AE65D5A05B16747F7E965BB2B1B43A087FE7179E902006CF
355706564F460C3663E2A7ECEF888AFAEF1C5FDB78CFDE46AF800B51910F6D88
6A4B5A75BFC123139BD7A2570E80E2BD65037053E719CD70C4DEF57588549D20
62D96D335B62954AA71678E3768E52156588B6D1A149171A2D7F49FB1779A8D9
D0C36923CCEBA101CA09D1B32EEB78F17B34233A4F114BB255232756DA5FBEF9
36A1BFE9709606FDEA209F39609EBAB4DF06CFA3A92CADCE3F307CD2793B4E37
933D15AAD2A34248C98F6EC5B39545593E3AC543005E007353736EF972FF07B2
CE4684AA1584B76A5A3FEC6CB8F33F2D13DB951896C7F5D9B750EC7B41FF2F11
4B2E4307BD80124B2490A7FE083C6879CF79D7A16090BBCD9ED8E3C8093ABC8E
A1B2B9CFE4149C204A514E1B6A5FB94C1E790A31FC5A66D64EA68DC9847AE9DA
10F047B45FBC764BF85EB8607A1F8B52DF983F34E596FB42F1034835DBA2B260
74B62DEE8B598B5B42015DE53116C15C8EC5874A4B7862CBE71D77671112D672
E581AF14FF790295D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7546FB0C2C0EB3C172C6715B1406A9A968CC3E7C4288FEADEB033D46FFB
6D567AEF67B192A18C43F88CBD86611040A919A2CEAB13992E516453EC5F7BCF
ED7B554491587CB4FC1F92D966796F32B5F305C7112F1DCD58B8DF9459D10F22
B7EC1D31D58A395A9BCF64DCCE5DF023964AB91102924BFE35B81889A7B3251C
E34330E4DAD4CC172A388EC5A39839EE33796029478200C10A0B065D87DBA0CC
FCCA51EAA2123A606C8BEDFB1D751EA63E22D672AFD4BEA55280C0ADC327457B
AE54CD165A3AA013EFB35D6CBD30D8F2A0F2195BB2E0AC4CD1265412C939E942
8ABC23C7A3A8E608F9D2E08D038E173035258987939150CF9C76E8F427457929
1D10DE456DA5AA83C67987484A66AAA639ABBD4A9A8DEA9E4795A69242251932
6ED89DE09FACF24C43333D1E3BD63300FE192E7D877755A98CAEBFA47191DB4B
B57C6A645362215BCC56AD984E8F2B81BE8DD1DF73AE77BBC4A654550D2771A2
D66CE9F246DEDB774A7E6DB9FB75EDB2B97031903F88AB9E1D59945A3BCD6ABE
D18FF62193295B5A3376B78B7F42C47BFCBA17E6B2CCB11C7CD87E6FA4B26BF9

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709006B68486B326967A28D
41E878EF9CDFFA015BFD11310CB2305640182A131B96D73348B7ED8D31A29D7F
2D889D8EC4F6C7A55DD179594ABED611CE4DE790CDDCB68CC677A362B879F4A7
F4F84113A561F6D170454B0DC4DB2F973E21176E5B00D0774F0BDB3F0E22D753
FDC635611AC85411D57FCE2CC85BB5DAE17BC41F3C1E5CA1BE272ECDEC1C574E
E68E33D269E90877555B1E9AF694D44B85295968D0CCDAC4B5EEFD6E6F284597
DC1016F2D7502E91FD71BA624C499BC62FE7B4734070F8C123A633E51596A0ED
00F273E0DD044A7DF055D633040BF5853FE171E3442C0A00DD938476920CF678
69A9DDF5A29AACE82231873F15E4EA92B37F9045EB711B4939EBC0785F347643
5792033AB924266D8734301BA52C5192F8B32AE780CC9D48C832833999E78819
CC4FEBEAAAD11210EA3D220AC1798A5781DFBE3E47C31D0B5A0B87147FFD44C2
0F4FEF9B7C06072E0398F740D8BBD3FB1B9920AE84C085461C1F5C08F4251173
001AC878E423340D008E73A1F49B6058DBD668C43C513C35AE8144FD672DF548
C439A883086F14F419820F312F3127097B59ECB9ED4D16EFFBCCFF0CF648981B
B0F888C510C0CB3C45918E92417F6CC39A8288A88398390816BB3FAC62D2051C
CCC0A389D730EAD6B05AD28D4311178DFBFE442372B08A31D416B78B71520456
64620D9D0A3FA3E8BA66A32F7839E4410B48557459EB0918274A879B02E0392E
5AF97B16F09D2B8A3B514BC1BB5467D359020C43A00570AAEBD3DBF637154F71
9A636A9700C081553E214361B2B57EDA19BBCCF098E1870D0846736F0649DCA8
FCCCB124E1FADDFAF3D5925CEF54EFE72CD0D2BDB735D18B4103C1DBDCD8EACB
15EA2822AC4D8AFF79F1746B14ACDB6FC83D45B9D3E972710DEF408694402960
947DA3B6BF54DA82FFEBC510725C300BA2FB19A603ECB41DC86E8ACD2DA44C5D
157E7B53ABA05461DA40B675F081053377364DEE80EF49C4B5909FE549B798B4
96C226DC16A18A9DE663612661F780459D9932AF482B5E2351E3BADBEFFD4B49
D1B174334DEB94DAC8D2EC2D2E2DFE71D5BBAE0E4D9EB7676FCE91258B1C760B
7B2047E64CC90881826A306E1DFDF01F3DDCA6BB91907EDB51A28F041DA75AC7
D17C3CF29FD3DEA0A4B1A9EADBAD6D726799AC546782A61855D48EC720454B4F
5CF2453FB7F04A266A917EAD3703E4D543A62F8ABE3BC15DAF5D5262B376B6D8
273B65C534411DD89A32CB8A923806422A333CB6695C4BE1E0F672C48BF1883E
7D1D860526B57FF1DB6F43CED1233BA301341CF48CAEC78E7E10954373AB66CC
420B55128C9184147CCBC6F75FC66A56A93123D51DD631180CB33DC4533C0356
C7D6AB6BE4CCF1C2A978C9A8DAA2BC5443838490E80AFCBB1340C523C7E24727
3704AF5EFDA9347EC4D6D521E9D0A70DB928FA22FD8DB3CEE7D6C182886BEC53
570618DA3B25FCD49D1B6F9776D4F00FCD44D092C2946D5B9FD8DECF117D5317
F38B097C5E84CF67653BB6FD4BD44241D788E81B07A92AD544D203B0E7C7AB5E
8E17519BDFA50EAAEE490C76CD606A0DC728E91DDFBEAF65EB7B28D41FC2ACFE
E9D6D55AA8FC3E6F861A0A32EE23534ECAB1259C875ED86B498B3106C65BD371
F2E48C48712ED6CF7509792BD183F736107AD30872AA1D431330C9ACAD4CCF84
96D3902402D054A5CA5522B0F83620B26F55D7620C2C1C3927211FE1A662DE75
C772FB11323AD065201A7943854F8FDF3950EDFD6CEA20D0649071442B2916EB
CE5F49FD26C5E19FFF0DF9E2E43264A353C3C6AAE69F73511154B0E21AC2C563
B89563D0A85133A2E0272A81BE424452267CCDAECF98055CFDE34F406011A65E
A04B40B2B808BC1EF341773B744ADCA05C768C16ADFB4DC714D6D08324EA733B
DAA0C99B203A6F692705A2AAA7255A1A4BA871D37ED38C7484570FA0B586629F
41B4C91FF0D8BFB60F2A5E15161ABF48E11280FCC40B5FA60D2C0F53900C454C
AA7AA832B225D956E1245919D7098C09AE06FDB99DC99FD73A4FC3F76B1C8137
20AFA5DF52A55872597D0183B6DC2CB0BAAD1B683D41966AB6C80B43C754BF5B
8A6D1556DB33E742060890E9E9275457D76E45FB016BC57A9358E74A8C30D004
2007D67247699708727F2970A091536CFAF78E601BC2A8EC5C5AE4782755A91C
7444089753722B12C8E070FEEA9EDB669415D29D174C759491C3A7C8E1563F42
AF0032B9C2226886F51068F0176FC6B2CA17A9001979BC68775377D1B858FC2E
3752DB7CE3588CD9504DE74A431E06327B65D9E6562CDB9285B80CB50C3F3DAB
380FE779D4D028A9B1EFE0F8A6AADEB2C0585898B9D5024C12F5E5234F4D4B55
0D87CBB601E0E2AEBF354A82FA072095C3D15F1D3175CC3FC4494FC7AC2B573C
8F579A120B273BCA92A1607A409FBD61B8BE22D7386F2C191A7C5700E862B84E
3AC378E35081FD04DAB71EC7D00A26479D8A6CC0666B92EFAD449C46C0017D0C
11F9940C3C642D413E561FB1522CAA5D0BB8DC77FF231F4EEE40F3AB829F6CA6
AFFD41E29EF40C5188525CF55B2865BB0FADECCB1D87AE01F96FFF5C5489AE1C
E13E4735E026279FD0CBB8C04B12FAF4A8A17BE2B968C07B67B1B669D870CD84
88866A08BC6A91C85D6195F064C3EF2E42B586FE7BC2E431EE3FD2763EF36253
21072A700250A6F7FCA0CABB879D786119A6CD7020D274E295C085A65B12CB98
0F68F9887EE4A096A96D1BDA20E29D396323428A32C796A45B5831A83344D791
4191CAC0A429E5DCFA1071C3CC208A3E427FD44C4E46027EBBA0E71EAC2EEC1A
651E9A99FB03B659C286DB507615B9030C8FEAAAFDB86C9D084F209EF222ADED
151D66248238CEE33FA83C0C2A6D0005D2E48A94A0EC04E388660B96C4B76460
8A343E526F1C00EA6FF028A17EE55181E8DC7D0210A490453DEB45C38483731C
8CB61DA6C153DD826F6DE8C5201B4601B3C109140E70742FE639DECB860F173C
88E11215ECCA67EDA2532EB1068BE4676B03DE8498497C0B41945F615AB9D19D
F1E507F5931C0C9C6EF70BEF51B97824D87BC72EB88D13C1B16596E069473FC9
9B0A95AE52329F2ACE7DBBD480BF2E5BF0A44B40ABE74EF31ACA66C821C0D1B5
245BB08D2DF6A3B6681C63BC6AA220DD556E00636C04B00C491DA8107AF1620A
5CA97B097B18BDE6C4028826675264E3E84C8996B87C8A97A3C6FEC359CC578E
D82D6D9BD90E357327D341F481BCA0B98CE80D43E23B30A536FBE259836BF266
C24A89994273665E7824381C343191D9B5E60E98562EFB3AD07486563FC0F379
AF362250B38795F245A6F5986113BB339EE1587436E75D300AF39F457AD74833
765A13709014FAC897C7556F0432819BD7094020D7F4B9FF487C05FED3613A71
55A83360304F797BA62C13C6D4DDB82D58F5C0902CE296572E86DA74F4BC59CD
5F4B5BA3671E02EBEF843A52AD0B05545E4A9F8CFFC8EB30BB24EEF6DE36A9BE
39D7F0299EE7011291A51B0B7CCE052C2B439E3B3E1A1D61B3AE5549CAFDC6E0
8AE135859A0D08B3F0FB115FAFA6E6993F44F293D1FBE5D372166EF5DCE2BCB4
B59615AD4CA171DDA71434762E5FD274D31E858AD9322AD1C100B930FA866396
2D2945A5CB95D800E38D1B45BEB3A54E3AF53B4E60BD3FB78BE1B7A3F066D2A4
25F8CF61CC3AA94A96A1CDF30B98BA80732C5843C3A3DC8A0B53B2F3635E75DD
AF0FAD1DA09A3B380949DF76583646824EC0F381BD215031EFCB5E6DC8CE6D9A
E9C3CC4E04BB9C73409FCE616C41351354D2DD34E81FB6766CB916130EB700C5
8EAEC55F6461F2D07747FEC06045EC47F13551DA885E19E402FD32B4102C12F5
3E90B275B9F72CFD86470D81E8B6583FD578DA600EC57A67E8077CB22A802C8D
B9C02F60A8D055AE747039CAADBAE1E30B475C5763EBD15E7CE20943F36B9A32
40B93C378CB708B685347218B1FA85BCF8B40E4F23364B490E5BDC42E51DA831
EF7EDFF0ED0F93F552F0E597CD4E3E500D8F1C7F7B8F5538B8468F118A3D2B8E
236D4AE8380D0A8B95583D983061074E2D49EA0ED7E1187AC88EDC58A1395D1A
1E7F6EE22EE5A3F3163231E41B006CA4E1AF127E9B9E36EF734E17DF8F4A8BF6
C5E3683E0E93039ADAAD403F910C7302A1EF80A4E6D92B63FC9B73E1B3F1C3D0
097BF20344202946F9B3E4E8467C46512843C2428DF62912AA9D869C0F513D8E
23CC7241AF1DE41DCD0C4D7948E2F1F8CB4558C797CD9FEF5149EF6B8CD4D8A9
5E57D402A8BA2E69CA7B8165187C6E623A4B412B11E0274C6929B904EAF7226C
5C5566F9C0B5A4062CAE38F57FAF832510C321373FF8BA515F0B62F052A65CF3
241FA254F0DE6D1CC88A57D684B667B8248E67A3A92AADE06E8E092BE707530F
E92188325339C4494AC360478F4F03441F6AF00F20347EA22F70144648261FB2
F81B8382CEF4046003AF052C90A3860E04A39FE3A27DBAD600735E22E8CD33D5
CCADD57068A8ABF3998776CA3CB66715F5DA04E88F1F7BE09A97B113904A5427
5271148D41590A66B34E5AAF0FB3287AF0B4E721362FF314EF65699A1B966120
4C310BA163521DE5D680AA8BEAE7D84A49F71B2F8B28B9351345B97836DA9B6A
484B8A832E7926A433816441B5CD248C2CB8FECF038BC9BAAA9F5BE6B52E6B2D
F84D3186C8BC9DBCB424B502553547944ADC473CDA959F714D4441085974DE61
C97063D121589908BD00B0D919207730874A2A04A0C3F4EBC32BD7BFE62E9FB0
E6F324F43FE48F0738D8247F6F8D8680E65C39D2F75DA62B310B5CF2B94AED84
DB41866EC7E4211B770BBB0321DDB118C1397F86C4DCD17548634DBAB90FC920
48A0C6E3B32C3F49D571E77F46E8AC9BC3564EED633BA808DE7C6429F813346F
4FB53B70AB53AA8E49072A148A1A2FE9F3B802010268D08D64EA1FCBAE84B0FC
9B4E93EA81A616E1CF819BC15E5F5E4996DB9E443662A499910172F8F8F30E22
591C43919E0D3182973BFC6406020CEFF5C230036E67B9EE23D5EB3B6B5904BB
27CB0E9F11A581E5DC417EBD855DFAC127DBE66B8EE58B8C86B2B15771A1B136
47ECF9586F06CD95B9ECFDBC49BC3B55FC4C91FD67C47EB8C3610F3E5AF48D0A
72CDEE102E933181680A3C299B28294FD57DF646B7271079523EEEBA3BC2F1EA
A3D3F82F885E21F4CDF14F2705666E8CAB9FC908AD153570AFCAFE398C73E408
2C19C1F53393535A22A829397EF3B936A7989E19BFD59D66741AC38931D82CBF
9BDEC59C97127673F74F2F26EC62634C9CBC068591B1C1FA0632BE0CB78CAE1D
72D6595C53DDC94FFC6308A0A99F10167A9FC9EC13FF453D0D85195690E04FD9
E1640AD42D58099D316DC664FF34D2C2A5FF4B9EF62F06EEBC75A3E1AFB3A00D
DE3D04B091B64DF8E5A8699CADC4C1D46609AAEA92876D1F56004A5AA88886B5
72EA7247F30D22A387ED80EDFAF845E184CC0594183845D0F9C4BBD0D9E4DC7A
1CBF0EDEEE6D1E519239975CF6D03FFFC4DF21D8B2026A29BB86CA94836EA4E5
93AB1FB558693E5ED938DBC9D3385EADA8C4748BE2C07CDD3544CCE3BF3F979F
71AB5CBF76485B306524017A1080D414B855FD2F981706787A38471B053D9EA1
7EB2CAC27E702479152FDEB06E17064CC7F588D253B6C0CB5D42871D5B52513C
210405E2BABF76A0415AE0B90E581B1384039664D4C55E9FFAD9870F051C816A
624AF2A848A7BD664FF1D15E65681EA1EA571F0ED81575E272F36A739C2353C5
FB5839E7E6D8BC3785F699FCAAC3357B027AD476C195735081FB38C33EF4E436
5CECA58495CF6680C98001CE48B4D96109D22E41F7D3D7B5400658F39BC966EC
2E96B1FEC6E6403B4BDD612284C4E8484428CFF5DD03ACAE5A85D512018D7027
CDEAE9AC2E68768246501BA615B1FD4252DB7DDDFEE4238DF4F8DDAE36E69710
E6DA0C30B9C9D5D706389B91AF0CACE7DF268F38FDDD878125131CBE9E698E7D
AA9197ED391A9729455C94123B2B9DC78196063BE94FD65334D2ACE89EB55DB6
401FBC465046E9022BE037DA3175FA274289E9AE7FAF4DF162590E59AFAF29BD
6DE0367CAF14D755D44F0DC35464F239CB5C4ECA4DB295A3E1F180A983B89AD6
1DD96351B82177968A6801AE64E5F2A6E701BFA294F7FC428DA4C1DE58EB1DA2
BF1FD2781C6AE2F8F02D0CD200684928853FBCD1A5EF6DE64AF5F5069172078E
ED2DF7EA1ED83DC35CC5B68BC73137EE2E832807F311BE87855D3BCCE558EDB4
7150B228D8A62F3DC3F10D79AF99E0593AE45DB4DC8C8832529631FABA0B611F
89BA8AB7C42C115A93761D1FFA9B70177543F76492919E80F0F379EF684F34BA
C59C5D2E69B392
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 21 /greaterequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC434AFB2D0C28359EE36A63B5584392FCCAAD696E61EC2B757A
1DC3F0AD50200A15715177C4CE424AF4E484131D760D46E50C7CB17315279D72
787FF5A04B3C6CBD5098893678D0308D60B3333751E196C94E747D7EDE023A5F
307ED188E1AEF09DC1518258F823F95A3C3B0096E8DACB91E3EB64726963A4F6
9885FBC971050B9968EBDD4AC1F79C747C43A04999375DF5A2F5E663C36DD291
7654BE0957E3E7628C9557B6169FDAB3D8031C3B0749DE4BB15DF42F9F8835D0
0AF005B8C958D33B59E07D83F8445ACA6AB51363B0764D0D02219B0854ADC6C6
DF6C017973BED1E2914D34656545D49E0AEF8F01D248F6C07554AE070D28DEF8
A31B47CAC3FE8BE03DA94B1FEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 170636867 223761600 1000 8000 8000
(C:/Users/moris/Cours/M2/Stage/Poster/poster_stage - Copie (3).dvi)
@start /Fa 205[1263 1263 49[{}2 2754.12 /CMR17 rf /Fb
205[650 650 49[{}2 1328.35 /CMR12 rf /Fc 135[739 4[613
586 1[653 1[776 1138 387 2[444 7[683 97[{}9 1328.35 /CMMI12
rf /Fd 22[590 8[590 103[664 2[664 369 517 442 1[664 664
664 1033 369 1[369 369 1[664 442 590 664 590 1[590 94[739
2[{ TeXBase1Encoding ReEncodeFont }21 1328.35 /Times-Roman
rf /Fe 139[532 3[956 2[1381 532 6[849 3[956 97[{
 TeXBase1Encoding ReEncodeFont }6 1912.83 /Times-Italic
rf /Ff 234[2142 21[{}1 2754.12 /CMSY10 rf /Fg 139[532
4[956 956 4[532 1[956 3[849 99[{ TeXBase1Encoding ReEncodeFont }6
1912.83 /Times-Roman rf /Fh 135[1148 2[1148 1[893 765
4[1786 638 2[638 3[1019 3[1019 97[{ TeXBase1Encoding ReEncodeFont }9
2295.84 /Times-Roman rf /Fi 140[893 893 12[1019 1148
2[1148 97[{ TeXBase1Encoding ReEncodeFont }5 2295.84
/Times-Italic rf /Fj 139[369 517 517 1[664 2[959 369
6[590 664 2[664 13[664 4[886 78[{ TeXBase1Encoding ReEncodeFont }11
1328.35 /Times-Italic rf /Fk 134[2113 4[1323 1852 1852
2[2380 2380 1[1323 2[1323 2380 2380 1[2113 2380 2113
1[2380 13[2380 37[1585 45[{ TeXBase1Encoding ReEncodeFont }16
4759.93 /Times-Italic rf /Fl 170[1591 2[1470 5[1346 2[734
1[1591 1[1346 2[1470 1591 65[{ TeXBase1Encoding ReEncodeFont }8
2203.29 /Times-Roman rf /Fm 135[1532 3[974 1270 1215
1[1353 1[1610 2359 803 1403 1[920 1[1291 1329 1250 1401
2[1416 97[{}15 2754.12 /CMMI12 rf /Fn 135[1223 2[1377
766 1071 1071 1377 1377 1377 1377 1988 766 2[766 1[1377
1[1223 1377 1223 1[1377 13[1377 4[1837 6[1988 71[{
 TeXBase1Encoding ReEncodeFont }20 2754.12 /Times-Italic
rf /Fo 4[1377 1[1377 10[766 3[1223 1223 1223 1223 6[1223
72[2754 28[1223 1377 1377 1988 1377 1377 766 1071 917
1377 1377 1377 1377 2143 766 1377 766 766 1377 1377 917
1223 1377 1223 1377 1223 8[1988 1[1988 1988 1683 1531
1837 1988 1531 1988 1988 2448 1683 1[1071 917 1988 1988
1531 1683 1988 1837 1837 1988 1[1223 1553 3[766 1377
1377 1377 1377 1377 1377 1377 1377 1377 1377 766 689
917 689 1553 1[917 917 917 1[2294 1377 33[1531 2[{
 TeXBase1Encoding ReEncodeFont }81 2754.12 /Times-Roman
rf /Fp 22[2113 2113 30[2908 83[2380 1323 1852 1585 1[2380
2380 2380 3703 1323 2[1323 2380 2380 1[2113 2380 2113
1[2113 13[2646 2[2646 1[3437 1[2908 2[1585 5[3175 8[1323
16[1585 1585 1585 39[{ TeXBase1Encoding ReEncodeFont }29
4759.93 /Times-Roman rf /Fq 22[1468 114[1653 1653 919
1286 1101 2[1653 1653 4[919 3[1468 1653 1468 1[1468 11[2386
2020 1838 2205 5[2020 2[1101 2[1838 14[1653 1653 5[1653
3[826 44[{ TeXBase1Encoding ReEncodeFont }24 3305.38
/Times-Roman rf /Fr 134[2380 2[2380 2380 1[1852 1585
2380 1[2380 2380 4[1323 2380 1[1585 2113 2380 2113 2380
2113 12[2908 3[2646 2[4232 2908 10[3437 20[1190 44[{
 .167 SlantFont TeXBase1Encoding ReEncodeFont }22 4759.93
/Times-Roman rf /Fs 140[2222 2222 1[2856 1[3176 4444
3[1588 1[2856 1[2536 2856 2[2856 97[{ TeXBase1Encoding ReEncodeFont }10
5711.91 /Times-BoldItalic rf /Ft 22[2536 112[2856 1[2856
1[1902 2222 3[2856 3176 4[1588 3176 2[2536 3176 2536
1[2856 19[5392 77[{ TeXBase1Encoding ReEncodeFont }14
5711.91 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a

 0 0 a 0 0 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 0.5 .pgfsetstrokeopacityalpha

 0.5 .pgfsetfillopacityalpha

 0 setgray

 save

 0.5 .pgfsetstrokeopacityalpha

 0.5 .pgfsetfillopacityalpha

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 -2551.21288 -5102.62502 ] concat

 pgfs



 0 setgray
 0 0 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.84526 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
3414.32922 4652.02356 3414.32922 0.0   /Lineto /lineto load def 0 
setlinejoin false Line  gsave 2.84526 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.84526 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
4182.5533 4168.32692 4182.5533 0.0   /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.84526 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
0 0 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray Black 0 TeXcolorgray 0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a
0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a

 0 0 a 0 0
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 0.5 .pgfsetstrokeopacityalpha

 0.5 .pgfsetfillopacityalpha

 0 setgray

 save

 0.5 .pgfsetstrokeopacityalpha

 0.5 .pgfsetfillopacityalpha

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 -2551.21288 -5102.62502 ] concat

 pgfs



 0 setgray
 0 0 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.84526 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
3414.32922 4652.02356 3414.32922 0.0   /Lineto /lineto load def 0 
setlinejoin false Line  gsave 2.84526 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.84526 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
4182.5533 4168.32692 4182.5533 0.0   /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.84526 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 0 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 62217 7534 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 0 0 1  setrgbcolor  0.1 true 30.57054 neg 41.09682 neg
1379.72552 68.05737 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1  setgray gsave fill grestore
stroke grestore gsave false 1 0.0 0.0  gsave 1  setgray currentrgbcolor
grestore gsave 0.8 0.92 0.95  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
6231 w Ft(M\351thodes)1428 b(de)f Fs(mapping)h Ft(de)g
Fs(reads)f Ft(a)-143 b(v)-57 b(ec)1428 b(indexation)f(des)h
Fs(reads)89742 23530 y Fr(Pierre)1192 b(Morisse,)d(Thierry)i(Lecroq,)g
(Arnaud)f(Lefeb)-71 b(vre)p 0 TeXcolorgray 0 TeXcolorgray
132969 30061 a Fq(LITIS)123487 34157 y(Uni)-83 b(v)-50
b(ersit\351)826 b(de)f(Rouen)122825 38253 y(76000)f(Rouen,)h(France)p
0 TeXcolorgray 28076 58962 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 0.8 0.92 0.95  setrgbcolor  0.1 true 30.57054 neg 31.00017
neg 454.43855 59.72414 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1  setgray gsave fill grestore
stroke grestore gsave false 1 0.0 0.0  gsave 1  setgray currentrgbcolor
grestore gsave 0.68 0.85 0.9  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 0.8 0.92 0.95  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 11694 w Fp(Introduction)13702 70150 y
Fo(Depuis)940 b(le)g(milieu)e(des)j(ann\351es)f(2000)g(et)g(le)g
(d\351v)-41 b(eloppement)938 b(des)i(s\351quen-)13702
73470 y(ceurs)662 b(\340)h(tr\350s)f(haut)g(d\351bit)g(\()p
Fn(Ne)-55 b(xt)662 b(Gener)-41 b(ation)662 b(Sequencing)p
Fo(\),)g(la)g(biologie)f(doit)13702 76791 y(f)-28 b(aire)698
b(f)-28 b(ace)699 b(au)g(traitement)e(d'\351normes)i(quantit\351s)e(de)
i(donn\351es,)g(form\351es)g(par)13702 80112 y(des)602
b(millions)f(de)h(tr\350s)g(courtes)g(s\351quences)g(appel\351es)g
Fn(r)-102 b(eads)p Fo(.)603 b(Dans)g(un)f(papier)13702
83433 y(relati)-69 b(v)-41 b(ement)743 b(r\351cent,)i(Philippe)g(et)g
(al.)h(ont)f(soulign\351)h(l'importance)e(de)i(l'in-)13702
86754 y(de)-41 b(xation)919 b(de)h(ces)g Fn(r)-102 b(eads)921
b Fo(a\002n)g(de)f(r\351soudre)h(des)f(probl\350mes)g(de)h(correction)
13702 90075 y(ou)782 b(de)f Fm(mapping)99 b Fo(,)782
b(et)g(ont)f(d\351v)-41 b(elopp\351)781 b(un)h(inde)-41
b(x)782 b(supportant)f(les)h(7)g(requ\352tes)13702 93396
y(sui)-69 b(v)g(antes,)688 b(pour)g(une)h(s\351quence)f
Fm(f)983 b Fo(de)688 b(longueur)h Fm(k)780 b Fo(donn\351e)689
b(:)p 0 TeXcolorgray 17833 98912 a(\227)p 0 TeXcolorgray
553 w(Dans)h(quels)e Fn(r)-102 b(eads)689 b Fm(f)983
b Fo(appara\356t)458 b(?)p 0 TeXcolorgray 17833 102233
a(\227)p 0 TeXcolorgray 553 w(Dans)690 b(combien)d(de)i
Fn(r)-102 b(eads)689 b Fm(f)983 b Fo(appara\356t)458
b(?)p 0 TeXcolorgray 17833 105554 a(\227)p 0 TeXcolorgray
553 w(Quelles)689 b(sont)f(les)h(occurrences)f(de)g Fm(f)754
b Fo(?)p 0 TeXcolorgray 17833 108875 a(\227)p 0 TeXcolorgray
553 w(Quel)689 b(est)f(le)g(nombre)g(d'occurrences)h(de)f
Fm(f)754 b Fo(?)p 0 TeXcolorgray 17833 112196 a(\227)p
0 TeXcolorgray 553 w(Dans)690 b(quels)e Fn(r)-102 b(eads)689
b Fm(f)983 b Fo(n'appara\356t)688 b(qu'une)g(fois)459
b(?)p 0 TeXcolorgray 17833 115516 a(\227)p 0 TeXcolorgray
553 w(Dans)690 b(combien)d(de)i Fn(r)-102 b(eads)689
b Fm(f)983 b Fo(n'appara\356t)687 b(qu'une)i(fois)459
b(?)p 0 TeXcolorgray 17833 118837 a(\227)p 0 TeXcolorgray
553 w(Quelles)738 b(sont)f(les)h(occurrences)f(de)h Fm(f)1031
b Fo(dans)738 b(les)g Fn(r)-102 b(eads)738 b Fo(o\371)g
Fm(f)1032 b Fo(n'appa-)21140 122158 y(ra\356t)688 b(qu'une)h(fois)459
b(?)13702 127674 y(Nous)784 b(pr\351sentons)g(ici)e(l'\351tat)g(de)i
(l'art)f(concernant)f(les)i(technologies)e(de)h(s\351-)13702
130995 y(quen\347age)793 b(et)f(les)i(probl\350mes)f(susmentionn\351s,)
f(ainsi)h(que)h(le)e(probl\350me)h(sur)13702 134316 y(lequel)767
b(nous)i(nous)g(sommes)f(principalement)e(pench\351s)i(durant)g(le)g
(d\351roule-)13702 137637 y(ment)687 b(de)i(ce)f(stage.)28076
153123 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 0.8 0.92 0.95  setrgbcolor  0.1 true 30.57054 neg 31.00017
neg 454.43855 69.20601 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1  setgray gsave fill grestore
stroke grestore gsave false 1 0.0 0.0  gsave 1  setgray currentrgbcolor
grestore gsave 0.68 0.85 0.9  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 0.8 0.92 0.95  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 12225 w
Fp(\311tat)1191 b(de)f(l'art)13702 164310 y Fo(Les)697
b(tableaux)g(pr\351sent\351s)h(ci-dessous)g(r\351sument)f(bri\350v)-41
b(ement)696 b(l'\351tat)h(de)g(l'art)13702 167631 y(concernant)e(les)h
(technologies)f(de)h(s\351quen\347age)g(et)f(les)h(outils)g(e)-41
b(xistants,)694 b(uti-)13702 170952 y(lisant)896 b(une)g(structure)h
(d'inde)-41 b(x)896 b(sur)i(les)f Fn(r)-102 b(eads)p
Fo(,)897 b(et)f(permettant)f(de)i(r\351soudre)13702 174273
y(des)726 b(probl\350mes)g(de)g(correction,)f(de)i Fm(mapping)99
b Fo(,)726 b(ou)g(de)g(traitement)f(des)h(7)h(re-)13702
177593 y(qu\352tes)688 b(pr\351c\351dentes.)p 0 TeXcolorgray
0 TeXcolorgray 13702 194623 a
 currentpoint currentpoint translate 0.3714 0.3714 scale neg exch neg
exch translate
 13702 194623 a 14390 177219
203000 45 v 14368 180540 45 3321 v 20944 179544 a Fo(T)-193
b(echnologie)p 41051 180540 V 10147 w(T)g(echnique)688
b(de)g(s\351quen\347age)p 76342 180540 V 9194 w(Plateforme)p
99626 180540 V 6263 w(Nombre)g(de)h Fm(r)75 b(eads)p
120584 180540 V 6683 w Fo(Longueur)p 143331 180540 V
6684 w(Pr\351cision)p 154910 180540 V 4827 w(T)-193 b(emps)p
170540 180540 V 11520 w(D\351bit)p 191373 180540 V 9817
w(Co\373t)p 201652 180540 V 6266 w(Erreurs)p 217368 180540
V 14390 180585 203000 45 v 14368 183905 45 3321 v 23065
184570 a(Illumina)p 41051 183905 V 10447 w(Synth\350se)688
b(bas\351)h(sur)g(polym\350res)p 76342 183905 V 78328
182909 a(HiSeq)g(2500/1500)p 99626 183905 V 6514 w(3)f(milliards)p
120584 183905 V 11332 w(36)g(-)h(100)p 143331 183905
V 11196 w(99)p 154910 183905 V 5917 w(2)g(-)f(11)h(jours)p
170540 183905 V 9855 w(600)p 191373 183905 V 9015 w(740)g(000)p
201652 183905 V 202338 184570 a(Substitutions)p 217368
183905 V 14368 187226 V 41051 187226 V 76342 187226 V
84334 186230 a(MiSeq)p 99626 187226 V 12212 w(17)f(millions)p
120584 187226 V 11025 w(25)g(-)h(250)p 143331 187226
V 10420 w(>99)p 154910 187226 V 4300 w(4)g(-)f(27)h(heures)p
170540 187226 V 9359 w(8,5)p 191373 187226 V 9359 w(125)g(000)p
201652 187226 V 217368 187226 V 14390 187271 203000 45
v 14368 190591 45 3321 v 24213 191256 a(Roche)p 41051
190591 V 18596 w(Polys\351quen\347age)p 76342 190591
V 80115 189595 a(454)f(GS)h(FLX+)p 99626 190591 V 9218
w(1)f(million)p 120584 190591 V 14773 w(700)p 143331
190591 V 11310 w(99,997)p 154910 190591 V 4503 w(23)g(heures)p
170540 190591 V 11195 w(0,7)p 191373 190591 V 9359 w(450)h(000)p
201652 190591 V 205822 191256 a(Indels.)p 217368 190591
V 14368 193912 V 41051 193912 V 76342 193912 V 80050
192916 a(454)g(GS)g(Junior)p 99626 193912 V 9152 w(1)f(million)p
120584 193912 V 14773 w(400)p 143331 193912 V 12944 w(>99)p
154910 193912 V 6136 w(10)g(heures)p 170540 193912 V
11195 w(0,4)p 191373 193912 V 9359 w(108)h(000)p 201652
193912 V 217368 193912 V 14390 193957 203000 45 v 14368
197277 45 3321 v 15054 197942 a(ABI)g(Life)f(T)-193 b(echnologies)p
41051 197277 V 53524 196281 a(Lig)-14 b(atures)p 76342
197277 V 15945 w(5500xl)689 b(SOLiD)p 99626 197277 V
7392 w(2,8)g(millions)p 120584 197277 V 13892 w(75)p
143331 197277 V 12688 w(99,99)p 154910 197277 V 6719
w(7)g(jours)p 170540 197277 V 12379 w(180)p 191373 197277
V 9015 w(595)g(000)p 201652 197277 V 205822 197942 a(Indels.)p
217368 197277 V 14368 200598 V 41051 200598 V 47245 199602
a(D\351tection)e(de)i(protons)p 76342 200598 V 6837 w(Ion)f(Proton)h
(Chip)f(I/II)p 99626 200598 V 2382 w(60)h(-)g(80)f(millions)p
120584 200598 V 6627 w(jusqu'\340)g(200)p 143331 200598
V 8546 w(>99)p 154910 200598 V 6824 w(2)h(heures)p 170540
200598 V 9015 w(10)g(-)f(100)p 191373 200598 V 6491 w(243)h(000)p
201652 200598 V 217368 200598 V 14390 200643 203000 45
v 14368 203964 45 3321 v 17081 202967 a(P)-41 b(aci\002c)688
b(Biosciences)p 41051 203964 V 3355 w(Simple)f(mol\351cule)g(en)i
(temps)f(r\351el)p 76342 203964 V 6319 w(P)-41 b(acBio)688
b(RS)p 99626 203964 V 12348 w(50)h(000)p 120584 203964
V 7944 w(3)g(000)f(en)h(mo)-28 b(yenne)p 143331 203964
V 5664 w(85)p 154910 203964 V 7601 w(2)689 b(heures)p
170540 203964 V 12228 w(13)p 191373 203964 V 9703 w(750)g(000)p
201652 203964 V 4812 w(Indels.)p 217368 203964 V 14390
204008 203000 45 v 14368 207329 45 3321 v 17981 207993
a(Oxford)g(Nanopore)p 41051 207329 V 6400 w(Exonucl\351ase)f(par)g
(Nanopore)p 76342 207329 V 83035 206332 a(GridION)p 99626
207329 V 9079 w(4)h(-)f(10)h(millions)p 120584 207329
V 3069 w(dizaines)f(de)g(milliers)p 143331 207329 V 5075
w(96)p 154910 207329 V 7827 w(v)-69 b(ariable)p 170540
207329 V 4077 w(quelques)689 b(dizaines)p 191373 207329
V 1402 w(v)-69 b(ariable)p 201652 207329 V 205822 207993
a(Indels.)p 217368 207329 V 14368 210650 V 41051 210650
V 76342 210650 V 83264 209653 a(MinION)p 99626 210650
V 13592 w(70)689 b(000)p 120584 210650 V 7356 w(dizaines)f(de)g
(milliers)p 143331 210650 V 5075 w(70)p 154910 210650
V 6913 w(48)g(heures)p 170540 210650 V 9818 w(0,132)p
191373 210650 V 9359 w(1)h(000)p 201652 210650 V 217368
210650 V 14390 210694 203000 45 v 13702 194623 a
 currentpoint currentpoint translate 1 0.3714 div 1 0.3714 div scale
neg exch neg exch translate
 13702
194623 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 21578 206331 a Fo(T)-91 b Fl(A)136 b(B)g(L)g(E)755
b Fo(1:)688 b(R\351capitulatif)e(des)i(dif)-69 b(f\351rentes)689
b(technologies)e(de)16969 209652 y(s\351quen\347age.)h(La)g
(pr\351cision)g(est)g(donn\351e)h(en)f(\045,)g(le)g(d\351bit)g(en)g
(Gb,)h(et)f(le)46262 212973 y(co\373t)g(en)g($.)p 0 TeXcolorgray
0 TeXcolorgray 13702 236560 a
 currentpoint currentpoint translate 0.49818 0.49818 scale neg exch
neg exch translate
 13702 236560 a 14390 214109
150988 45 v 14368 217430 45 3321 v 20563 216434 a Fo(Outil)p
32375 217430 V 9921 w(Structure)g(de)h(donn\351es)p 62974
217430 V 4414 w(Erreurs)g(corrig\351es)p 83190 217430
V 2898 w(Nombre)g(de)f Fm(r)75 b(eads)689 b Fo(\(longueur\))p
119601 217430 V 2898 w(Espace)f(m\351moire)p 139208 217430
V 1327 w(T)-193 b(emps)p 147840 217430 V 1329 w Fm(r)75
b(eads)688 b Fo(corrig\351s)p 165355 217430 V 14390 217474
150988 45 v 14368 220795 45 3321 v 18956 219799 a(SHREC)p
32375 220795 V 9900 w(Arbre)h(des)g(suf)-69 b(\002x)-41
b(es)p 62974 220795 V 12651 w(subs.)p 83190 220795 V
17375 w(1)688 b(090)h(946)g(\(70\))p 119601 220795 V
16764 w(1)g(500)p 139208 220795 V 8956 w(183)p 147840
220795 V 7909 w(88,56)p 165355 220795 V 14390 220839
150988 45 v 14368 224160 45 3321 v 15054 223164 a(HybridSHREC)p
32375 224160 V 6000 w(Arbre)g(des)g(suf)-69 b(\002x)-41
b(es)p 62974 224160 V 7896 w(subs.)689 b(+)g(indels)p
83190 224160 V 12963 w(977)g(971)f(\(178\))p 119601 224160
V 16421 w(15)g(000)p 139208 224160 V 8956 w(28)p 147840
224160 V 8598 w(98,39)p 165355 224160 V 14390 224204
150988 45 v 14368 227525 45 3321 v 19415 228189 a(HiTEC)p
32375 227525 V 10546 w(T)-220 b(able)688 b(des)g(suf)-69
b(\002x)-41 b(es)p 62974 227525 V 12837 w(subs.)p 83190
227525 V 93271 226529 a(1)688 b(090)h(946)g(\(70\))p
119601 227525 V 17797 w(757)p 139208 227525 V 10677 w(28)p
147840 227525 V 153521 228189 a(94,43)p 165355 227525
V 14368 230846 V 32375 230846 V 62974 230846 V 83190
230846 V 93271 229850 a(4)f(639)h(675)g(\(70\))p 119601
230846 V 16764 w(3)g(210)p 139208 230846 V 8956 w(125)p
147840 230846 V 165355 230846 V 14390 230890 150988 45
v 14368 234211 45 3321 v 20257 234875 a(Fiona)p 32375
234211 V 6530 w(T)-220 b(able)688 b(des)h(suf)-69 b(\002x)-41
b(es)689 b(partielle)p 62974 234211 V 3222 w(subs.)g(+)g(indels)p
83190 234211 V 93615 233215 a(977)g(971)f(\(178\))p 119601
234211 V 17109 w(2)h(000)p 139208 234211 V 9644 w(15)p
147840 234211 V 153521 234875 a(66,76)p 165355 234211
V 14368 237532 V 32375 237532 V 62974 237532 V 83190
237532 V 92582 236536 a(2)g(464)g(690)f(\(142\))p 119601
237532 V 16076 w(3)h(000)p 139208 237532 V 9644 w(32)p
147840 237532 V 165355 237532 V 14390 237576 150988 45
v 14368 240897 45 3321 v 20334 239901 a(Coral)p 32375
240897 V 11718 w(T)-220 b(able)687 b(de)h(hachage)p 62974
240897 V 8334 w(subs.)h(+)g(indels)p 83190 240897 V 12963
w(977)g(971)f(\(178\))p 119601 240897 V 17109 w(8)h(000)p
139208 240897 V 10333 w(5)p 147840 240897 V 9286 w(92,88)p
165355 240897 V 14390 240942 150988 45 v 14368 244262
45 3321 v 18858 244927 a(RA)-110 b(CER)p 32375 244262
V 10242 w(T)-220 b(able)687 b(de)h(hachage)p 62974 244262
V 13089 w(subs.)p 83190 244262 V 93271 243266 a(2)g(119)h(404)g(\(75\))
p 119601 244262 V 16764 w(1)g(437)p 139208 244262 V 9644
w(23)p 147840 244262 V 8598 w(76,65)p 165355 244262 V
14368 247583 V 32375 247583 V 62974 247583 V 83190 247583
V 88795 246587 a(101)g(548)g(652)f(\(457)h(595\))p 119601
247583 V 11601 w(41)f(700)p 139208 247583 V 8268 w(104)p
147840 247583 V 7909 w(42,95)p 165355 247583 V 14390
247628 150988 45 v 14368 250949 45 3321 v 19261 249952
a(BLESS)p 32375 250949 V 10913 w(Filtres)g(de)g(Bloom)p
62974 250949 V 8601 w(subs.)h(+)g(indels)p 83190 250949
V 11930 w(1)g(096)g(140)f(\(101\))p 119601 250949 V 17797
w(11)p 139208 250949 V 12055 w(6)p 147840 250949 V 9286
w(84,38)p 165355 250949 V 14390 250993 150988 45 v 14368
254314 45 3321 v 18191 254978 a(LoRDEC)p 32375 254314
V 7590 w(Graphe)h(de)f(De)h(Bruijn)p 62974 254314 V 6348
w(subs.)g(+)g(indels)p 83190 254314 V 86285 253317 a(33)f(360)h
Fm(r)75 b(eads)689 b Fo(longs)f(\(2)h(938\))p 119601
254314 V 127361 254978 a(960)p 139208 254314 V 10677
w(10)p 147840 254314 V 8598 w(85,78)p 165355 254314 V
14368 257635 V 32375 257635 V 62974 257635 V 83190 257635
V 83876 256638 a(et)f(2)h(313)f(613)h Fm(r)75 b(eads)689
b Fo(courts)f(\(100\))p 119601 257635 V 139208 257635
V 147840 257635 V 165355 257635 V 14390 257679 150988
45 v 13702 236560 a
 currentpoint currentpoint translate 1 0.49818 div 1 0.49818 div scale
neg exch neg exch translate
 13702 236560 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 17334 252821 a Fo(T)-91
b Fl(A)136 b(B)g(L)g(E)754 b Fo(2:)689 b(R\351capitulatif)d(des)i(dif)
-69 b(f\351rentes)689 b(m\351thodes)f(de)g(correction)17948
256142 y(des)h Fn(r)-102 b(eads)p Fo(.)689 b(L)-253 b('espace)687
b(m\351moire)h(est)g(donn\351e)g(en)h(Mo.)f(Le)g(temps)g(est)18087
259463 y(donn\351)h(en)f(minutes.)f(Les)i Fn(r)-102 b(eads)689
b Fo(corrig\351s)f(sont)h(donn\351s)g(en)f(\045,)h(et)f(la)33231
262783 y(v)-69 b(aleur)688 b(indiqu\351e)f(est)i(une)f(mo)-28
b(yenne.)p 0 TeXcolorgray 0 TeXcolorgray 13703 275608
a
 currentpoint currentpoint translate 0.42584 0.42584 scale neg exch
neg exch translate
 13703 275608 a 14391 268211 176866 45 v 14369 271532
45 3321 v 20869 270536 a Fo(Outil)p 32987 271532 V 7142
w(Structure)688 b(de)g(donn\351es)p 57414 271532 V 1329
w(Erreurs)g(prises)h(en)g(compte)p 86047 271532 V 1327
w(Nombre)g(de)f Fn(r)-102 b(eads)689 b Fo(\(longueur\))p
118708 271532 V 1329 w(Espace)f(m\351moire)f(\(en)i(Mo\))p
147952 271532 V 1329 w(T)-193 b(emps)688 b(\(en)g(min\))p
166681 271532 V 1328 w Fn(r)-102 b(eads)689 b Fo(mapp\351s)g(\(en)f
(\045\))p 191235 271532 V 14391 271576 176866 45 v 14369
274897 45 3321 v 20563 273901 a(MA)-151 b(Q)p 32987 274897
V 8862 w(T)-220 b(able)687 b(de)i(hachage)p 57414 274897
V 9456 w(subs.)g(+)g(indels)p 86047 274897 V 14952 w(1)g(000)f(000)h
(\(44\))p 118708 274897 V 19708 w(1)g(200)p 147952 274897
V 18822 w(331)p 166681 274897 V 16477 w(92,53)p 191235
274897 V 14391 274941 176866 45 v 14369 278262 45 3321
v 18217 277266 a(MrsF)-204 b(AST)p 32987 278262 V 6516
w(T)-220 b(able)687 b(de)i(hachage)p 57414 278262 V 14211
w(subs.)p 86047 278262 V 19019 w(1)g(000)g(000)f(\(100\))p
118708 278262 V 18332 w(20)g(000)p 147952 278262 V 18134
w(169)p 166681 278262 V 16477 w(90,70)p 191235 278262
V 14391 278307 176866 45 v 14369 281627 45 3321 v 15055
280631 a(MrsF)-204 b(AST)-253 b(-Ultra)p 32987 281627
V 3354 w(T)-220 b(able)687 b(de)i(hachage)p 57414 281627
V 14211 w(subs.)p 86047 281627 V 19019 w(2)g(000)g(000)f(\(100\))p
118708 281627 V 19020 w(2)h(000)p 147952 281627 V 19511
w(57)p 166681 281627 V 17165 w(91,41)p 191235 281627
V 14391 281672 176866 45 v 13703 275608 a
 currentpoint currentpoint translate 1 0.42584 div 1 0.42584 div scale
neg exch neg exch translate
 13703 275608
a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
16538 284558 a Fo(T)-91 b Fl(A)136 b(B)g(L)g(E)733 b
Fo(3:)667 b(R\351capitulatif)e(des)i(dif)-69 b(f\351rentes)667
b(m\351thodes)g(de)g Fn(mapping)g Fo(de)16469 287878
y Fn(r)-102 b(eads)p Fo(.)679 b(L)-253 b('espace)677
b(m\351moire)g(est)h(donn\351e)h(en)f(Mo.)g(Le)g(temps)g(est)g
(donn\351)18275 291199 y(en)688 b(minutes.)f(Les)i Fn(r)-102
b(eads)689 b Fo(mapp\351s)f(sont)h(donn\351s)g(en)f(\045,)g(et)g(la)g
(v)-69 b(aleur)36982 294520 y(indiqu\351e)687 b(est)i(une)f(mo)-28
b(yenne.)13702 303640 y(Peu)1218 b(d'outils)f(sont)h(pr\351sent\351s)f
(ici,)g(mais)h(de)f(nombreuses)h(m\351thodes)g(de)13702
306961 y Fm(mapping)860 b Fo(de)762 b Fn(r)-102 b(eads)p
Fo(,)762 b(n'utilisant)e(pas)h(de)h(structure)f(d'inde)-41
b(x)761 b(sur)h(les)f Fn(r)-102 b(eads)p Fo(,)13702 310282
y(e)-41 b(xistent)610 b(et)g(produisent)i(de)f(tr\350s)g(bons)h
(r\351sultats,)e(aussi)i(bien)f(en)g(espace)g(et)g(en)13702
313603 y(temps,)687 b(qu'en)i(qualit\351)e(de)h Fm(mapping)99
b Fo(.)p 0 TeXcolorgray 0 TeXcolorgray 13703 330849 a
 currentpoint currentpoint translate 0.3487 0.3487 scale neg exch neg
exch translate

13703 330849 a 14391 310169 216302 45 v 14369 313490
45 3321 v 15819 312494 a Fo(Outil)p 22888 313490 V 19928
w(Structure)688 b(de)g(donn\351es)p 82985 313490 V 19164
w(Nombre)g(de)h Fn(r)-102 b(eads)689 b Fo(\(longueur\))p
115647 313490 V 1328 w(Espace)g(m\351moire)e(\(en)h(Go\))p
144431 313490 V 1329 w(T)-193 b(emps)689 b(R1)f(\(en)h(ms\))p
165991 313490 V 1328 w(T)-193 b(emps)689 b(R2)f(\(en)h(ms\))p
187551 313490 V 1328 w(T)-193 b(emps)689 b(R3)f(\(en)h(ms\))p
209111 313490 V 1328 w(T)-193 b(emps)689 b(R4)f(\(en)h(ms\))p
230671 313490 V 14391 313534 216302 45 v 14369 316855
45 3321 v 15974 322501 a(GkA)p 22888 316855 V 38017 315859
a(T)-220 b(able)687 b(des)i(suf)-69 b(\002x)-41 b(es)689
b(modi\002\351e)p 82985 316855 V 90503 322501 a(42)g(400)g(000)f
(\(75\))p 115647 316855 V 20511 w(20)p 144431 316855
V 22418 w(16)p 165991 316855 V 18806 w(25)p 187551 316855
V 18806 w(25)p 209111 316855 V 18462 w(0,1)p 230671 316855
V 14369 320176 V 22888 320176 V 52182 319180 a(+)p 82985
320176 V 115647 320176 V 144431 320176 V 165991 320176
V 187551 320176 V 209111 320176 V 230671 320176 V 14369
323497 V 22888 323497 V 33771 322501 a(T)-220 b(able)687
b(des)i(suf)-69 b(\002x)-41 b(es)690 b(modi\002\351e)d(in)-110
b(v)-41 b(erse)p 82985 323497 V 115647 323497 V 144431
323497 V 165991 323497 V 187551 323497 V 209111 323497
V 230671 323497 V 14369 326818 V 22888 326818 V 52182
325822 a(+)p 82985 326818 V 115647 326818 V 144431 326818
V 165991 326818 V 187551 326818 V 209111 326818 V 230671
326818 V 14369 330139 V 22888 330139 V 27429 329142 a(T)-220
b(able)687 b(associant)h Fm(k)92 b Fo(-mer)688 b(-)h(nombre)f
(d'occurrences)p 82985 330139 V 115647 330139 V 144431
330139 V 165991 330139 V 187551 330139 V 209111 330139
V 230671 330139 V 14391 330183 216302 45 v 14369 333504
45 3321 v 15055 335828 a(CGkA)p 22888 333504 V 35341
332508 a(T)-220 b(able)687 b(de)i(suf)-69 b(\002x)-41
b(es)689 b(\351chantillonn\351e)p 82985 333504 V 90503
335828 a(42)g(400)g(000)f(\(75\))p 115647 333504 V 19364
w(3)h(-)f(7)p 144431 333504 V 19894 w(1203)p 165991 333504
V 17429 w(28)p 187551 333504 V 17429 w(1278)p 209111
333504 V 17429 w(28)p 230671 333504 V 14369 336825 V
22888 336825 V -169108 w(+)p 82985 336825 V 115647 336825
V 144431 336825 V 165991 336825 V 187551 336825 V 209111
336825 V 230671 336825 V 14369 340146 V 22888 340146
V 43380 339149 a(3)h(v)-41 b(ecteurs)688 b(de)g(bits)p
82985 340146 V 115647 340146 V 144431 340146 V 165991
340146 V 187551 340146 V 209111 340146 V 230671 340146
V 14391 340190 216302 45 v 14369 343511 45 3321 v 15437
345835 a(PgSA)p 22888 343511 V 34805 342514 a(T)-220
b(able)688 b(des)g(suf)-69 b(\002x)-41 b(es)690 b(\351chantillonn\351e)
p 82985 343511 V 90503 345835 a(42)f(400)g(000)f(\(75\))p
115647 343511 V 19364 w(1)h(-)f(4)p 144431 343511 V 21271
w(70)p 165991 343511 V 18806 w(58)p 187551 343511 V 18806
w(70)p 209111 343511 V 18806 w(58)p 230671 343511 V 14369
346832 V 22888 346832 V -169108 w(+)p 82985 346832 V
115647 346832 V 144431 346832 V 165991 346832 V 187551
346832 V 209111 346832 V 230671 346832 V 14369 350153
V 22888 350153 V 23574 349156 a(T)-220 b(able)688 b(auxiliaire)e
(d'information)i(sur)h(les)f Fn(r)-102 b(eads)689 b Fo(et)f
Fm(k)92 b Fo(-mers)p 82985 350153 V 115647 350153 V 144431
350153 V 165991 350153 V 187551 350153 V 209111 350153
V 230671 350153 V 14391 350197 216302 45 v 13703 330849
a
 currentpoint currentpoint translate 1 0.3487 div 1 0.3487 div scale
neg exch neg exch translate
 13703 330849 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 17027 343335 a Fo(T)-91 b Fl(A)136 b(B)g(L)g(E)754
b Fo(4:)689 b(R\351capitulatif)d(des)i(dif)-69 b(f\351rentes)688
b(m\351thodes)g(permettant)f(de)18359 346656 y(traiter)g(les)h(7)h
(requ\352tes.)e(L)-253 b('espace)688 b(m\351moire)f(est)i(donn\351)f
(en)h(Go.)f(Le)20789 349977 y(temps)g(est)g(donn\351)h(en)f
(millisecondes.)f(Les)h(requ\352tes)g(5-7)h(sont)19512
353298 y(e)-41 b(xclues)688 b(du)h(comparatif,)e(car)h(non)h
(impl\351ment\351es)d(dans)j(GkA)g(et)17384 356619 y(CGkA)g(lors)g(des)
f(tests)h(r\351alis\351s)f(dans)g(le)g(papier)g(introduisant)g(PgSA.)p
0 TeXcolorgray 0 TeXcolorgray 130888 58962 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 0.8 0.92 0.95  setrgbcolor  0.1 true 30.57054 neg 93.87968
neg 927.57825 59.72414 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1  setgray gsave fill grestore
stroke grestore gsave false 1 0.0 0.0  gsave 1  setgray currentrgbcolor
grestore gsave 0.68 0.85 0.9  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 0.8 0.92 0.95  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 9303 w Fp(Correction)1191
b(de)f Fk(r)-176 b(eads)1189 b Fp(longs)h(:)g(Les)h Fk(r)-176
b(eads)1189 b Fp(NaS)155222 64940 y(\(Nanopore)i Fk(Synthetic-long)p
Fp(\))99055 77398 y Fo(Les)660 b(nouv)-41 b(elles)659
b(technologies)g(de)h(s\351quen\347age)g(permettent)e(de)i
(s\351quencer)g(des)g Fn(r)-102 b(eads)661 b Fo(de)f(plus)g(en)g(plus)g
(longs,)f(mais)h(ceux-ci)f(disposent)h(d'un)g(important)f(taux)g(d'er)
-55 b(-)99055 80719 y(reur)-110 b(,)722 b(a)-55 b(v)g(oisinant)721
b(notamment)f(les)i(30\045)h(pour)f(les)g Fn(r)-102 b(eads)723
b Fo(s\351quenc\351s)f(par)g(la)f(plateforme)g(MinION.)i(Comme)e(le)g
(montrent)g(les)h(tableaux)f(pr\351c\351dents,)g(les)h(m\351thodes)
99055 84040 y(de)750 b(correction)g(classiques)g(ne)g(sont)g(pas)g
(adapt\351es)g(\340)g(de)g(tels)g Fn(r)-102 b(eads)p
Fo(,)750 b(et)g(sont)g(donc)g(tr\350s)g(peu)g(ef)-69
b(\002caces.)750 b(Une)h(solution)f(alternati)-69 b(v)-41
b(e)748 b(pour)i(r\351soudre)h(ce)e(probl\350me)h(est)99055
87361 y(la)687 b(g\351n\351ration)g(de)g Fn(r)-102 b(eads)688
b Fo(dits)f(synth\351tiques.)f(Ces)i(derniers)f(sont)g
(g\351n\351r\351s)h(via)e(une)i(approche)f(h)-14 b(ybride,)687
b(utilisant)e(des)j Fn(r)-102 b(eads)688 b Fo(longs)f(comme)g
Fn(templates)g Fo(et)f(des)i Fn(r)-102 b(eads)99055 90682
y Fo(courts)894 b(disposant)f(d'un)g(plus)h(f)-28 b(aible)892
b(taux)h(d'erreur)-151 b(.)894 b(Les)f Fn(r)-102 b(eads)894
b Fo(ainsi)e(synth\351tis\351s,)h(appel\351s)g Fn(r)-102
b(eads)894 b Fo(NaS,)f(car)g(synth\351tis\351s)g(\340)g(partir)f(de)h
Fn(r)-102 b(eads)894 b Fo(de)f(la)g(technologie)99055
94003 y(Nanopore,)609 b(peuv)-41 b(ent)609 b(atteindre)e(une)i
(longueur)g(de)g(60)g(000,)g(et)f(s'aligner)g(int\351gralement)f(et)h
(sans)i(erreurs.)f(Nous)h(pr\351sentons)f(ici)f(une)h(premi\350re)f
(m\351thode)g(permettant)99055 97324 y(de)689 b(synth\351tiser)f(de)g
(tels)g Fn(r)-102 b(eads)p Fo(,)689 b(et)f(la)g(m\351thode)f(que)i
(nous)g(a)-55 b(v)g(ons)689 b(d\351v)-41 b(elopp\351.)113430
111495 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 0.8 0.92 0.95  setrgbcolor  0.1 true 30.57054 neg 31.00017
neg 454.43855 59.72414 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1  setgray gsave fill grestore
stroke grestore gsave false 1 0.0 0.0  gsave 1  setgray currentrgbcolor
grestore gsave 0.68 0.85 0.9  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 0.8 0.92 0.95  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 6077 w Fp(Premi\350re)1192
b(m\351thode)99055 122417 y Fo(La)794 b(premi\350re)e(m\351thode)h(de)h
(synth\350se)f(des)h Fn(NaS)816 b Fo(repose)794 b(sur)g(les)f
(\351tapes)g(sui-)99055 125738 y(v)-69 b(antes)689 b(:)p
0 TeXcolorgray 103875 131574 a(1.)p 0 TeXcolorgray 553
w(Alignement)991 b(des)h Fn(r)-102 b(eads)993 b Fo(courts)f(sur)h(le)e
Fn(r)-102 b(ead)1067 b Fo(long)992 b(utilis\351)e(comme)106494
134895 y Fn(template)p Fo(,)687 b(a\002n)i(de)f(trouv)-41
b(er)688 b(les)h Fn(seeds)106494 146617 y
 currentpoint currentpoint translate 1.49744 1.49744 scale neg exch
neg exch translate
 106494 146617
a 126102 145241 a

 126102 145241 a 126102 145241 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1
TeXcolorrgb
 -169.78198 28.3468 moveto

 169.78198 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -169.78198 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 169.78198 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 178.54167 25.51643 ] concat

 pgfs



 0 setgray
 0 0 1 TeXcolorrgb 126102 145241
a Fj(template)p 0 TeXcolorgray 126102 145241 a


 pgfr

 restore

 restore

 -141.43517 0.0 moveto

 -113.6861 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -141.43517 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -113.6861 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 0.29886 0.0 moveto

 28.04793 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.29886 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 28.04793 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 99.5127 0.0 moveto

 127.26176 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.5127 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 127.26176 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 185.62836 -3.98108 ] concat

 pgfs



 0 setgray
 126102
145241 a Fj(seeds)126102 145241 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 106494 146617 a
 currentpoint currentpoint translate 1 1.49744 div 1 1.49744 div scale
neg exch neg exch translate
 106494
146617 a 0 TeXcolorgray 103875 150434 a Fo(2.)p 0 TeXcolorgray
553 w(Recrutement)1223 b(de)i(nouv)-41 b(eaux)1224 b
Fn(r)-102 b(eads)1225 b Fo(courts,)g(en)f(recherchant)g(des)106494
153755 y Fn(r)-102 b(eads)689 b Fo(similaires)e(aux)i
Fn(seeds)106494 174548 y
 currentpoint currentpoint translate 0.83905 0.83905 scale neg exch
neg exch translate
 106494 174548 a 126102 160240
a

 126102 160240 a 126102 160240 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 -141.43517 -14.17339 moveto

 -99.5127 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -141.43517 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -99.5127 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 0.29886 -14.17339 moveto

 42.22133 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.29886 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 42.22133 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 99.5127 -14.17339 moveto

 141.43517 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.5127 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -15.29077 -120.26791 ] concat

 pgfs



 0 setgray
 126102 160240 a Fi(seeds)126102
160240 y


 pgfr

 restore

 restore

 0.0 -14.17339 moveto

 170.08092 -14.17339 moveto

 170.08092 17.13802 93.9343 42.52023 0.0 42.52023 curveto

 -93.9343 42.52023 -170.08092 17.13802 -170.08092 -14.17339 curveto

 -170.08092 -45.48482 -93.9343 -70.86702 0.0 -70.86702 curveto

 93.9343 -70.86702 170.08092 -45.48482 170.08092 -14.17339 curveto

 closepath

 0.0 -14.17339 moveto

 pgfstr

 save
 1 0 0 TeXcolorrgb
 227.07335 0.0 moveto

 268.9958 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 227.07335 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 268.9958 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 255.42015 -56.69362 moveto

 297.34262 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 255.42015 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 297.34262 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 283.76697 -28.3468 moveto

 325.68942 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 283.76697 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 325.68942 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0
TeXcolorrgb
 283.76697 28.3468 moveto

 325.68942 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 283.76697 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 325.68942 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 312.11377 0.0 moveto

 354.03624 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 312.11377 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 354.03624 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

1 0 0 TeXcolorrgb
 354.63397 -56.69362 moveto

 396.55646 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 354.63397 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 368.80739 28.3468 moveto

 410.72986 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 368.80739 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 410.72986 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0
TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 397.1542 -28.3468 moveto

 439.07666 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 397.1542 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 439.07666 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 425.501 0.0 moveto

 467.42348 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 425.501 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 467.42348 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 453.84782 -56.69362 moveto

 495.77028 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 453.84782 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 495.77028 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0
TeXcolorrgb
 468.02122 28.3468 moveto

 509.9437 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 468.02122 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 509.9437 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 326.28717 56.69362 moveto

 368.20966 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 326.28717 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 368.20966 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

1 0 0 TeXcolorrgb
 482.19463 -28.3468 moveto

 524.1171 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 482.19463 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 524.1171 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 281.97243 -120.26791 ] concat

 pgfs



 0 setgray
 1 0 0 TeXcolorrgb 126102
160240 a Fi(r)-85 b(eads)575 b Fh(similaires)g(aux)f
Fi(seeds)p 0 TeXcolorgray 126102 160240 a


 pgfr

 restore

 restore

 379.84706 -14.17339 moveto

 549.928 -14.17339 moveto

 549.928 32.79375 473.78137 70.86705 379.84706 70.86705 curveto

 285.91277 70.86705 209.76614 32.79375 209.76614 -14.17339 curveto

 209.76614 -61.14053 285.91277 -99.21385 379.84706 -99.21385 curveto

 473.78137 -99.21385 549.928 -61.14053 549.928 -14.17339 curveto

 closepath

 379.84706 -14.17339 moveto

 pgfstr

 save

 0.79701 pgfw

 171.44972 -14.17339 moveto

 209.10626 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 171.44972 -14.17339 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -6.0708 2.72491 moveto 0.34868
0.0 lineto -6.0708 -2.72491 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 save

 [1.0 0.0 0.0 1.0 209.10626 -14.17339 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -6.0708 2.72491 moveto 0.34868
0.0 lineto -6.0708 -2.72491 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 106494 174548
a
 currentpoint currentpoint translate 1 0.83905 div 1 0.83905 div scale
neg exch neg exch translate
 106494 174548 a 0 TeXcolorgray 103875 178365 a Fo(3.)p
0 TeXcolorgray 553 w(Micro-assemblage)688 b(de)h(l'ensemble)e(de)h
Fn(r)-102 b(eads)690 b Fo(obtenu)106494 186972 y
 currentpoint currentpoint translate 1.23317 1.23317 scale neg exch
neg exch translate
 106494
186972 a 122953 183800 a

 122953 183800 a 122953 183800
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 -141.43517 -14.17339 moveto

 -99.5127 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -141.43517 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -99.5127 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -113.08836 14.17339 moveto

 -71.16588 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -71.16588 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -77.65485 -28.3468 moveto

 -35.73236 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -77.65485 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -35.73236 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -42.22133 0.0 moveto

 -0.29886 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -42.22133 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -0.29886 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 0.29886 -14.17339 moveto

 42.22133 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.29886 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 42.22133 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 28.64568 14.17339 moveto

 70.56815 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 28.64568 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 70.56815 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 71.16588 -28.3468 moveto

 113.08836 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 71.16588 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 113.08836 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 99.5127 -14.17339 moveto

 141.43517 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.5127 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 127.8595 14.17339 moveto

 169.78198 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 127.8595 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 169.78198 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 56.99248 0.0 moveto

 98.91495 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 56.99248 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 98.91495 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 170.37971 -28.3468 moveto

 212.30219 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 170.37971 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 212.30219 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 198.72653 14.17339 moveto

 240.649 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 198.72653 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 240.649 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 227.07335 -14.17339 moveto

 268.9958 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 227.07335 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 268.9958 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 142.03291 0.0 moveto

 183.95538 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 142.03291 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 183.95538 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -98.91495 0.0 moveto

 -56.99248 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -98.91495 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -56.99248 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -13.87451 -28.3468 moveto

 28.04793 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -13.87451 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 28.04793 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 restore

 newpath

 restore

 pgfc


 106494 186972 a
 currentpoint currentpoint translate 1 1.23317 div 1 1.23317 div scale
neg exch neg exch translate
 106494 186972 a 0 TeXcolorgray 103875
193938 a Fo(4.)p 0 TeXcolorgray 553 w(Obtention)e(du)h
Fn(r)-102 b(ead)689 b(NaS)106494 200189 y
 currentpoint currentpoint translate 1.48526 1.48526 scale neg exch
neg exch translate
 106494 200189
a 126102 201962 a

 126102 201962 a 126102 201962 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 -169.78198 28.3468 moveto

 169.78198 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -169.78198 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 169.78198 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 178.54167 24.3657 ] concat

 pgfs



 0 setgray
 126102
201962 a Fj(r)-49 b(ead)332 b(NaS)126102 201962 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 106494
200189 a
 currentpoint currentpoint translate 1 1.48526 div 1 1.48526 div scale
neg exch neg exch translate
 106494 200189 a 99055 207403 a Fo(En)856 b(g\351n\351ral,)g
(un)g(seul)g(contig)g(est)g(produit)f(par)i(cette)d(m\351thode,)h(mais)
h(il)g(est)99055 210724 y(cependant)1060 b(possible)g(que)g(la)g(phase)
g(de)g(recrutement)f(des)h Fn(r)-102 b(eads)p Fo(,)1061
b(notam-)99055 214045 y(ment)1010 b(dans)g(les)g(r\351gions)g
(r\351p\351titi)-69 b(v)-41 b(es,)1008 b(recrute)i(de)g(mauv)-69
b(ais)1009 b Fn(r)-102 b(eads)p Fo(,)1011 b(et)e(que)99055
217366 y(des)1058 b(contigs)f(erron\351s,)g(ne)g(de)-69
b(v)g(ant)1057 b(pas)g(\352tre)g(associ\351)g(au)g Fn(template)p
Fo(,)f(soient)99055 220686 y(alors)783 b(produits.)h(Pour)f
(r\351soudre)h(ce)e(probl\350me,)g(et)h(ne)g(produire)g(qu'un)h(seul)
99055 224007 y(contig)688 b(en)h(sortie,)e(il)h(suf)-69
b(\002t)689 b(d'emplo)-28 b(yer)688 b(la)g(d\351marche)g(sui)-69
b(v)g(ante)688 b(:)p 0 TeXcolorgray 103875 229843 a(1.)p
0 TeXcolorgray 553 w(Obtention)g(de)g(plusieurs)h(contigs)106494
235183 y
 currentpoint currentpoint translate 0.5478 0.5478 scale neg exch neg
exch translate
 106494 235183 a 138701 230862 a

 138701 230862
a 138701 230862 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1 TeXcolorrgb
 -283.16922 0.0 moveto

 -142.03291 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -283.16922 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -142.03291 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -252.88022 -25.2664 ] concat

 pgfs



 0 setgray
 138701
230862 a Fo(contig)f(1)138701 230862 y


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 -113.08836 0.0 moveto

 -0.29886 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -0.29886 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -96.97278 -25.2664 ] concat

 pgfs



 0 setgray
 138701 230862 a Fo(contig)g(2)138701 230862
y


 pgfr

 restore

 restore

 save
 0 0 1 TeXcolorrgb
 28.64568 0.0 moveto

 226.4756 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 28.64568 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 226.4756 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.28146 -25.2664 ] concat

 pgfs



 0 setgray
 138701 230862 a Fo(contig)g(3)138701
230862 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 312.11377 0.0 moveto

 396.55646 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 312.11377 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 314.05594 -25.2664 ] concat

 pgfs



 0 setgray
 138701 230862
a Fo(contig)g(4)138701 230862 y


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 425.501 0.0 moveto

 538.29051 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 425.501 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 538.29051 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 441.6166 -25.2664 ] concat

 pgfs



 0 setgray

138701 230862 a Fo(contig)g(2)138701 230862 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 567.23506 0.0 moveto

 651.67775 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 567.23506 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 651.67775 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 569.17723 -25.2664 ] concat

 pgfs



 0 setgray
 138701 230862 a Fo(contig)g(5)138701 230862
y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 106494 235183 a
 currentpoint currentpoint translate 1 0.5478 div 1 0.5478 div scale
neg exch neg exch translate
 106494 235183 a 0 TeXcolorgray 103875
239000 a Fo(2.)p 0 TeXcolorgray 553 w(Construction)821
b(du)h(graphe)f(des)h(contigs,)f(weighted)g(par)g(le)g(de)-41
b(gr\351)821 b(de)106494 242321 y(couv)-41 b(erture)688
b(des)h(contigs)f(par)g(les)h Fn(seeds)106494 258425
y
 currentpoint currentpoint translate 0.64801 0.64801 scale neg exch
neg exch translate
 106494 258425 a 138701 247804 a

 138701 247804 a 138701
247804 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1 TeXcolorrgb
 -283.16922 56.69362 moveto

 -142.03291 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -283.16922 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -142.03291 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -252.88022 31.4272 ] concat

 pgfs



 0 setgray
 138701 247804
a Fo(contig)f(1)138701 247804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -218.7979 65.15442 ] concat

 pgfs



 0 setgray
 138701 247804 a Fo(1)138701
247804 y


 pgfr

 restore

 restore

 save
 0 0 1 TeXcolorrgb
 312.11377 56.69362 moveto

 509.9437 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 312.11377 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 509.9437 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 370.74957 31.4272 ] concat

 pgfs



 0 setgray
 138701 247804
a Fo(contig)g(3)138701 247804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 404.83188 65.15442 ] concat

 pgfs



 0 setgray
 138701 247804 a Fo(2)138701
247804 y


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 28.64568 0.0 moveto

 141.43517 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 28.64568 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 44.76126 -25.2664 ] concat

 pgfs



 0 setgray
 138701 247804
a Fo(contig)g(2)138701 247804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 78.84358 8.4608 ] concat

 pgfs



 0 setgray
 138701 247804 a Fo(1)138701
247804 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 -226.4756 -56.69362 moveto

 -142.03291 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -226.4756 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -142.03291 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -224.53342 -81.96004 ] concat

 pgfs



 0 setgray
 138701 247804
a Fo(contig)g(4)138701 247804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -190.4511 -47.98515 ] concat

 pgfs



 0 setgray
 138701 247804 a Fo(0)138701
247804 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 312.11377 -56.69362 moveto

 396.55646 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 312.11377 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 314.05594 -81.96004 ] concat

 pgfs



 0 setgray
 138701 247804
a Fo(contig)g(5)138701 247804 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 348.13826 -47.98515 ] concat

 pgfs



 0 setgray
 138701 247804 a Fo(0)138701
247804 y


 pgfr

 restore

 restore

 -127.56062 56.69362 moveto

 13.40752 7.35472 lineto

 pgfstr

 save

 [0.94678 -0.33136 0.33136 0.94678 13.4075 7.35474 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 -127.56062 -56.69362 moveto

 13.40752 -7.35472 lineto

 pgfstr

 save

 [0.94678 0.33136 -0.33136 0.94678 13.4075 -7.35474 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 155.90744 7.08669 moveto

 296.87561 56.42557 lineto

 pgfstr

 save

 [0.94678 0.33136 -0.33136 0.94678 296.8756 56.42555 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 155.90744 -7.08669 moveto

 296.87561 -56.42557 lineto

 pgfstr

 save

 [0.94678 -0.33136 0.33136 0.94678 296.8756 -56.42555 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 restore

 newpath

 restore

 pgfc


 106494 258425 a
 currentpoint currentpoint translate 1 0.64801 div 1 0.64801 div scale
neg exch neg exch translate
 106494 258425 a 0 TeXcolorgray
103875 262242 a Fo(3.)p 0 TeXcolorgray 553 w(S\351lection)849
b(du)i(chemin)e(optimal,)g(passant)h(par)g(les)g(contigs)g(ayant)g(le)
106494 265563 y(plus)689 b(haut)f(de)-41 b(gr\351)688
b(de)g(couv)-41 b(erture)688 b(par)h(les)f Fn(seeds)106494
281667 y
 currentpoint currentpoint translate 0.64801 0.64801 scale neg exch
neg exch translate
 106494 281667 a 138701 271046 a

 138701 271046
a 138701 271046 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1 TeXcolorrgb
 -283.16922 56.69362 moveto

 -142.03291 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -283.16922 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -142.03291 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -252.88022 31.4272 ] concat

 pgfs



 0 setgray
 138701
271046 a Fo(contig)g(1)138701 271046 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -218.7979 65.15442 ] concat

 pgfs



 0 setgray
 138701 271046
a Fo(1)138701 271046 y


 pgfr

 restore

 restore

 save
 0 0 1 TeXcolorrgb
 312.11377 56.69362 moveto

 509.9437 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 312.11377 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 509.9437 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 370.74957 31.4272 ] concat

 pgfs



 0 setgray

138701 271046 a Fo(contig)g(3)138701 271046 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 404.83188 65.15442 ] concat

 pgfs



 0 setgray
 138701
271046 a Fo(2)138701 271046 y


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 28.64568 0.0 moveto

 141.43517 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 28.64568 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 44.76126 -25.2664 ] concat

 pgfs



 0 setgray

138701 271046 a Fo(contig)g(2)138701 271046 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 78.84358 8.4608 ] concat

 pgfs



 0 setgray
 138701
271046 a Fo(1)138701 271046 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 -226.4756 -56.69362 moveto

 -142.03291 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -226.4756 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -142.03291 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 restore

 save

 [1.0 0.0 0.0 1.0 -224.53342 -81.96004 ] concat

 pgfs



 0 setgray

138701 271046 a Fo(contig)g(4)138701 271046 y


 pgfr

 restore

 restore

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 restore

 save

 [1.0 0.0 0.0 1.0 -190.4511 -47.98515 ] concat

 pgfs



 0 setgray
 138701
271046 a Fo(0)138701 271046 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 312.11377 -56.69362 moveto

 396.55646 -56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 312.11377 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 -56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 restore

 save

 [1.0 0.0 0.0 1.0 314.05594 -81.96004 ] concat

 pgfs



 0 setgray

138701 271046 a Fo(contig)g(5)138701 271046 y


 pgfr

 restore

 restore

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 restore

 save

 [1.0 0.0 0.0 1.0 348.13826 -47.98515 ] concat

 pgfs



 0 setgray
 138701
271046 a Fo(0)138701 271046 y


 pgfr

 restore

 restore

 -127.56062 56.69362 moveto

 13.40752 7.35472 lineto

 pgfstr

 save

 [0.94678 -0.33136 0.33136 0.94678 13.4075 7.35474 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 -127.56062 -56.69362 moveto

 13.40752 -7.35472 lineto

 pgfstr

 save

 [0.94678 0.33136 -0.33136 0.94678 13.4075 -7.35474 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 restore

 155.90744 7.08669 moveto

 296.87561 56.42557 lineto

 pgfstr

 save

 [0.94678 0.33136 -0.33136 0.94678 296.8756 56.42555 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 save

 0.3 .pgfsetstrokeopacityalpha

 0.3 .pgfsetfillopacityalpha

 155.90744 -7.08669 moveto

 296.87561 -56.42557 lineto

 pgfstr

 save

 [0.94678 -0.33136 0.33136 0.94678 296.8756 -56.42555 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 106494 281667 a
 currentpoint currentpoint translate 1 0.64801 div 1 0.64801 div scale
neg exch neg exch translate
 106494
281667 a 0 TeXcolorgray 103875 285484 a Fo(4.)p 0 TeXcolorgray
553 w(V\351ri\002cation)606 b(du)g(contig)f(produit)h(par)g(alignement)
f(des)h Fn(r)-102 b(eads)607 b Fo(courts,)106494 288805
y(et)688 b(acceptation)f(si)h(la)g(couv)-41 b(erture)688
b(est)g(suf)-69 b(\002sante)106494 300470 y
 currentpoint currentpoint translate 1.10428 1.10428 scale neg exch
neg exch translate
 106494 300470
a 126102 297298 a

 126102 297298 a 126102 297298 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1
TeXcolorrgb
 -169.78198 28.3468 moveto

 -28.64568 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -169.78198 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -28.64568 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 0 1 0 TeXcolorrgb
 -28.04793 28.3468 moveto

 84.74155 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -28.04793 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 84.74155 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

0 0 1 TeXcolorrgb
 85.3393 28.3468 moveto

 283.16922 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 85.3393 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 283.16922 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 291.92891 24.3743 ] concat

 pgfs



 0 setgray
 0 0 1 TeXcolorrgb 126102
297298 a Fg(contig)p 0 TeXcolorgray 126102 297298 a


 pgfr

 restore

 restore

 -169.78198 -14.17339 moveto

 -127.8595 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -169.78198 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -127.8595 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -141.43517 14.17339 moveto

 -99.5127 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -141.43517 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -99.5127 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -84.74155 -28.3468 moveto

 -42.81908 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -84.74155 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -42.81908 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -42.22133 0.0 moveto

 -0.29886 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -42.22133 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -0.29886 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 0.29886 -14.17339 moveto

 42.22133 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.29886 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 42.22133 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 28.64568 14.17339 moveto

 70.56815 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 28.64568 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 70.56815 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 71.16588 -28.3468 moveto

 113.08836 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 71.16588 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 113.08836 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 99.5127 -14.17339 moveto

 141.43517 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.5127 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 127.8595 14.17339 moveto

 169.78198 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 127.8595 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 169.78198 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 56.99248 0.0 moveto

 98.91495 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 56.99248 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 98.91495 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 170.37971 -28.3468 moveto

 212.30219 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 170.37971 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 212.30219 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 205.81322 14.17339 moveto

 247.7357 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 205.81322 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 247.7357 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 241.24673 -14.17339 moveto

 283.16922 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 241.24673 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 283.16922 -14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 142.03291 0.0 moveto

 183.95538 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 142.03291 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 183.95538 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -113.08836 0.0 moveto

 -71.16588 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -71.16588 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 -13.87451 -28.3468 moveto

 28.04793 -28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -13.87451 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 28.04793 -28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 restore

 newpath

 restore

 pgfc


 106494
300470 a
 currentpoint currentpoint translate 1 1.10428 div 1 1.10428 div scale
neg exch neg exch translate
 106494 300470 a 99055 307684 a Fo(Le)682 b(temps)g(de)g
(traitement)e(d'un)j Fn(r)-102 b(ead)757 b Fo(long,)681
b(et)h(donc)g(la)g(synth\350se)g(d'un)h Fn(r)-102 b(ead)99055
311005 y Fo(NaS,)673 b(prend)f(en)h(mo)-28 b(yenne)672
b(moins)g(d'une)h(minute,)e(la)h(majorit\351)e(de)j(ce)f(temps)99055
314326 y(\351tant)718 b(pro)-41 b(v)-55 b(oqu\351e)719
b(par)g(la)g(m\351thode)f(peu)h(ef)-69 b(\002cace)718
b(de)h(recrutement)f(de)h Fn(r)-102 b(eads)99055 317646
y Fo(similaires.)1094 b(Celle-ci)e(est)h(r\351alis\351e)g(en)g(inde)-41
b(xant)1092 b(l'ensemble)h(des)g Fm(k)92 b Fo(-mers)99055
320967 y(de)882 b(tous)f(les)h Fn(r)-102 b(eads)882 b
Fo(non)g(align\351s)e(dans)i(un)g(BFT)-204 b(,)881 b(et)g(en)g
(recherchant)g(les)g Fm(k)92 b Fo(-)99055 324288 y(mers)617
b(des)f Fn(seeds)h Fo(dans)g(celui-ci.)e(Un)i Fn(seed)690
b Fo(et)616 b(un)h Fn(r)-102 b(ead)691 b Fo(non)617 b(align\351)e(sont)
h(alors)99055 327609 y(consid\351r\351s)766 b(comme)e(similaires)g
(s'ils)i(partagent)e(au)i(moins)f Fm(t)g(k)92 b Fo(-mers)766
b(ne)f(se)99055 330930 y(che)-69 b(v)g(auchant)688 b(pas.)99055
336022 y(La)893 b(synth\350se)g(de)g Fn(r)-102 b(eads)894
b Fo(NaS)g(par)f(cette)f(m\351thode)g(a)h(\351t\351)f(test\351e)g(sur)i
(un)f(en-)99055 339343 y(semble)808 b(de)f(66)h(492)g
Fn(r)-102 b(eads)809 b Fo(longs)f(s\351quenc\351s)f(par)h(MinION,)h(et)
e(\340)h(l'aide)e(de)99055 342664 y(plusieurs)733 b(sous-ensembles)h
(de)e Fn(r)-102 b(eads)734 b Fo(courts)f(de)f(la)h(technologie)e
(Illumina.)99055 345985 y(11)712 b(275)g Fn(r)-102 b(eads)712
b Fo(NaS,)g(d'une)g(longueur)f(maximale)f(de)i(59)f(863,)h(ont)f(ainsi)
g(\351t\351)99055 349306 y(produits.)582 b(Seulement)e(17\045)h(des)h
Fn(r)-102 b(eads)582 b Fo(longs)f(ont)g(donc)g(produit)g(un)g(NaS,)h
(ce)99055 352626 y(qui)634 b(est)g(du)f(au)h(fort)g(taux)f(d'erreurs)i
(des)f Fn(r)-102 b(eads)634 b Fo(MinION.)g(De)h(plus,)e(97\045)h(des)
99055 355947 y Fn(r)-102 b(eads)681 b Fo(ainsi)e(synth\351tis\351s)g
(ont)h(pu)g(\352tre)f(align\351s)g(sur)h(le)f(g\351nome)g(de)h
(r\351f\351rence)99055 359268 y(sans)689 b(aucune)g(erreur)-110
b(,)688 b(prouv)-69 b(ant)688 b(ainsi)g(l'ef)-69 b(\002cacit\351)687
b(de)h(cette)g(m\351thode.)p 0 TeXcolorgray 0 TeXcolorgray
198784 111051 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 5.69054 SLW 0.8 0.92 0.95  setrgbcolor  0.1 true 30.57054 neg 31.00017
neg 454.43855 59.72414 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25  setgray
gsave fill grestore stroke grestore gsave 1  setgray gsave fill grestore
stroke grestore gsave false 1 0.0 0.0  gsave 1  setgray currentrgbcolor
grestore gsave 0.68 0.85 0.9  setrgbcolor currentrgbcolor grestore
300 1.0 0. false tx@GradientDict begin GradientFill end grestore gsave
5.69054 SLW 0.8 0.92 0.95  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
9250 w Fp(Notre)1190 b(m\351thode)184409 122526 y Fo(Notre)952
b(m\351thode)f(repose)i(sur)f(le)g(m\352me)f(principe)g(que)h(la)f
(m\351thode)g(pr\351c\351-)184409 125847 y(dente,)c(mais)g(vise)g(\340)
h(diminuer)e(le)h(temps)h(d'e)-41 b(x\351cution)946 b(en)h(proposant)h
(une)184409 129168 y(m\351thode)642 b(dif)-69 b(f\351rente)642
b(pour)h(le)g(recrutement)e(de)i Fn(r)-102 b(eads)p Fo(.)643
b(Nous)h(alignons)e(donc)184409 132489 y(tout)535 b(d'abord)g(les)g
Fn(r)-102 b(eads)536 b Fo(courts)f(sur)h(les)f Fn(r)-102
b(eads)535 b Fo(longs)h Fn(templates)p Fo(,)e(en)h(se)g(\002xant)184409
135810 y(un)689 b(seuil)f Fm(l)61 b(min)p Fo(,)687 b(et)h
(r\351cup\351rons)h(les)f Fn(r)-102 b(eads)689 b Fo(:)p
0 TeXcolorgray 188540 141787 a(\227)p 0 TeXcolorgray
554 w(T)-220 b(otalement)686 b(align\351s)p 0 TeXcolorgray
188540 146437 a(\227)p 0 TeXcolorgray 554 w(A)-204 b(v)-41
b(ec)689 b(un)f(pr\351\002x)-41 b(e)689 b(de)f(longueur)g
Ff(\025)765 b Fm(l)61 b(min)688 b Fo(align\351)p 0 TeXcolorgray
188540 151086 a(\227)p 0 TeXcolorgray 554 w(A)-204 b(v)-41
b(ec)689 b(un)f(suf)-69 b(\002x)-41 b(e)689 b(de)g(longueur)f
Ff(\025)765 b Fm(l)61 b(min)688 b Fo(align\351)184409
157556 y(Pour)909 b(chaque)g Fn(r)-102 b(eads)909 b Fo(long)g
Fn(template)p Fo(,)e(les)i(dif)-69 b(f\351rents)909 b(ensembles)f(de)g
Fn(r)-102 b(eads)184409 160877 y Fo(sont)1001 b(ajout\351s)g(\340)g
(trois)g(listes,)f(tri\351es)h(en)g(fonction)f(des)i(positions)f(de)g
(d\351b)-55 b(ut)184409 164198 y(d'alignements)578 b(pr\351alablement)f
(calcul\351es.)h(Notre)h(m\351thode)f(se)h(d\351compose)184409
167519 y(alors)601 b(en)h(deux)f(phases.)h(La)e(premi\350re)h(parcourt)
g(ces)g(listes)g(en)g(parall\350le,)e(a\002n)184409 170840
y(de)1051 b(recruter)e(de)i(nouv)-41 b(eaux)1050 b Fn(r)-102
b(eads)1051 b Fo(similaires)e(aux)i Fn(r)-102 b(eads)1051
b Fo(totalement)d(ali-)184409 174161 y(gn\351s,)694 b(utilis\351s)e
(comme)h Fn(seeds)p Fo(,)h(en)f(consid\351rant)g(qu'un)h
Fn(r)-102 b(ead)769 b Fo(est)693 b(similaire)f(\340)184409
177482 y(un)807 b Fn(seed)880 b Fo(si)806 b(son)h(pr\351\002x)-41
b(e)806 b(\(respecti)-69 b(v)-41 b(ement)805 b(son)h(suf)-69
b(\002x)-41 b(e\))807 b(correctement)e(ali-)184409 180803
y(gn\351)734 b(che)-69 b(v)g(auche)733 b(ce)h Fn(seed)808
b Fo(sur)734 b(une)g(longueur)f(sup\351rieure)h(ou)g(\351g)-14
b(ale)733 b(au)h(seuil)184409 184123 y(\002x\351)715
b Fm(l)61 b(min)p Fo(.)715 b(Le)f(processus)j(de)e(recrutement,)e(met)h
(\340)h(jour)g(la)g(liste)f(des)h Fn(seeds)p Fo(,)184409
187444 y(a\002n)778 b(de)g(prendre)g(en)g(compte)f(les)h(allongements)e
(pro)-41 b(v)-55 b(oqu\351s)778 b(par)g(les)g(recru-)184409
190765 y(tements,)687 b(et)h(ainsi)g(couvrir)g(d'a)-55
b(v)-69 b(antage)688 b(le)g Fn(r)-102 b(ead)763 b Fo(long)689
b Fn(template)e Fo(consid\351r\351.)p 0 TeXcolorgray
0 TeXcolorgray 201713 206940 a

 201713 206940 a 201713
206940 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1 TeXcolorrgb
 -113.08836 56.69362 moveto

 396.55646 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 405.31615 52.61787 ] concat

 pgfs



 0 setgray
 0 0 1 TeXcolorrgb
201713 206940 a Fe(template)p 0 TeXcolorgray 201713 206940
a


 pgfr

 restore

 restore

 56.99248 28.3468 moveto

 141.43517 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 56.99248 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 150.19485 24.35373 ] concat

 pgfs



 0 setgray
 201713 206940 a Fd(seed)201713 206940 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 -13.87451 0.0 moveto

 13.87451 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -13.87451 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 13.87451 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 14.47226 0.0 moveto

 70.56815 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 14.47226 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 70.56815 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -34.0878 -3.85225 ] concat

 pgfs



 0 setgray
 1 0 0
TeXcolorrgb 201713 206940 a Fc(r)36 b Fb(1)p 0 TeXcolorgray
201713 206940 a


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 14.63167 -14.17339 moveto

 70.40874 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 14.63167 -14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 70.40874 -14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 10.3846 -30.73978 ] concat

 pgfs



 0 setgray
 1 0 0
TeXcolorrgb 201713 206940 a Fd(suf)-33 b(\002x)-20 b(e)332
b(align\351)p 0 TeXcolorgray 201713 206940 a


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 99.5127 0.0 moveto

 134.34846 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.5127 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 134.34846 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save
 0 1 0 TeXcolorrgb
 134.94621 0.0 moveto

 183.95538 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 134.94621 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 183.95538 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 192.71506 -3.85225 ] concat

 pgfs



 0 setgray
 0 1 0
TeXcolorrgb 201713 206940 a Fc(r)36 b Fb(2)p 0 TeXcolorgray
201713 206940 a


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 99.6721 -14.17339 moveto

 134.18906 -14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.6721 -14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 134.18906 -14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 84.31673 -30.73978 ] concat

 pgfs



 0 setgray
 0 1 0
TeXcolorrgb 201713 206940 a Fd(pr\351\002x)-20 b(e)332
b(align\351)p 0 TeXcolorgray 201713 206940 a


 pgfr

 restore

 restore

 57.15189 14.17339 moveto

 84.58214 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 57.15189 14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 84.58214 14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 58.38179 17.25298 ] concat

 pgfs



 0 setgray
 201713 206940
a Fc(l)29 b(min)201713 206940 y


 pgfr

 restore

 restore

 99.6721 14.17339 moveto

 127.10236 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 99.6721 14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 127.10236 14.17339 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 100.90201 17.25298 ] concat

 pgfs



 0 setgray
 201713 206940 a Fc(l)g(min)201713
206940 y


 pgfr

 restore

 restore

 120.47392 -42.5202 moveto

 120.47392 -84.23148 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 120.47392 -84.23148 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 save
 0 0 1 TeXcolorrgb
 -113.08836 -113.38724 moveto

 396.55646 -113.38724 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 -113.38724 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 -113.38724 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 405.31615 -117.46297 ] concat

 pgfs



 0 setgray
 0 0 1 TeXcolorrgb
201713 206940 a Fe(template)p 0 TeXcolorgray 201713 206940
a


 pgfr

 restore

 restore

 56.99248 -141.73404 moveto

 141.43517 -141.73404 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 56.99248 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 141.43517 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save
 0 1 0 TeXcolorrgb
 142.03291 -141.73404 moveto

 183.95538 -141.73404 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 142.03291 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 183.95538 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 192.71506 -144.49272 ] concat

 pgfs



 0 setgray
 201713 206940 a Fj(seed)368
b Fd(mis)332 b(\340)g(jour)201713 206940 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray 187246 230087 a Fo(F)138 b Fl(I)e(G)g(U)g(R)g(E)785
b Fo(1:)719 b(Illustration)f(du)h(processus)h(de)f(recrutement)f(de)h
Fn(r)-102 b(eads)720 b Fo(si-)187177 233408 y(milaires)583
b(pour)j(un)f Fn(seed)660 b Fo(donn\351.)585 b Fm(l)61
b(min)585 b Fo(repr\351sente)f(le)h(seuil)g(permettant)187177
236728 y(de)841 b(d\351terminer)g(la)g(similarit\351.)g(Ici,)g(on)h
(remarque)f(que)h(le)g Fn(seed)916 b Fo(est)842 b(si-)187177
240049 y(milaire)959 b(\340)i Fm(r)75 b Fa(2)p Fo(,)961
b(mais)g(pas)g(\340)g Fm(r)75 b Fa(1)p Fo(.)963 b Fm(r)75
b Fa(2)962 b Fo(est)f(donc)g(recrut\351,)f(et)h(le)f
Fn(seed)1036 b Fo(est)187177 243370 y(mis)661 b(\340)h(jour)g(a)-55
b(v)-41 b(ec)661 b(les)h(parties)g(de)f(ce)h Fn(r)-102
b(ead)737 b Fo(ne)662 b(le)f(che)-69 b(v)g(auchant)662
b(pas,)g(a\002n)187177 246691 y(d'\351tendre)688 b(sa)g(longueur)-151
b(.)184409 258410 y(La)933 b(deuxi\350me)f(phase)h(parcourt)f(de)h
(nouv)-41 b(eau)933 b(les)g(listes)f(en)h(parall\350le,)e(a\002n)184409
261731 y(d'\351tendre)1014 b(les)h(contigs)f(produits)h(par)g(la)f
(phrase)h(pr\351c\351dente.)g(Nous)h(nous)184409 265051
y(af)-69 b(franchissons)864 b(ici)f(de)g(la)g(relation)f(de)h
(similarit\351)e(d\351\002nie)i(pr\351c\351demment,)184409
268372 y(d\351\002nissions)910 b(un)f(seuil)g Fm(l)61
b(max)p Fo(,)909 b(et)f(recrutons)h(alors)h(un)f Fn(r)-102
b(ead)984 b Fo(partiellement)184409 271693 y(align\351)659
b(si)g(son)i(pr\351\002x)-41 b(e)659 b(\(respecti)-69
b(v)-41 b(ement)658 b(son)i(suf)-69 b(\002x)-41 b(e\))660
b(che)-69 b(v)g(auche)660 b(le)f(contig)184409 275014
y(sur)689 b(une)g(longueur)f(inf\351rieure)g(ou)g(\351g)-14
b(ale)688 b(au)h(seuil)f Fm(l)61 b(max)p Fo(.)p 0 TeXcolorgray
0 TeXcolorgray 202720 290930 a

 202720 290930 a 202720
290930 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save
 0 0 1 TeXcolorrgb
 -113.08836 56.69362 moveto

 396.55646 56.69362 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 56.69362 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 405.31615 53.86325 ] concat

 pgfs



 0 setgray
 0 0 1 TeXcolorrgb
202720 290930 a Fj(template)p 0 TeXcolorgray 202720 290930
a


 pgfr

 restore

 restore

 0.29886 28.3468 moveto

 198.12878 28.3468 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.29886 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 198.12878 28.3468 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 206.88847 25.58813 ] concat

 pgfs



 0 setgray
 202720 290930 a Fd(contig)202720 290930 y


 pgfr

 restore

 restore

 0.45827 42.5202 moveto

 13.71512 42.5202 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.45827 42.5202 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 13.71512 42.5202 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -6.30652 50.98102 ] concat

 pgfs



 0 setgray
 202720 290930
a Fc(l)29 b(max)202720 290930 y


 pgfr

 restore

 restore

 184.71252 42.5202 moveto

 197.96938 42.5202 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 184.71252 42.5202 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 197.96938 42.5202 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 177.94774 50.98102 ] concat

 pgfs



 0 setgray
 202720 290930 a Fc(l)g(max)202720
290930 y


 pgfr

 restore

 restore

 save
 1 0 0 TeXcolorrgb
 -56.39474 14.17339 moveto

 -8.803 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -56.39474 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 -8.803 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 1 0 0 TeXcolorrgb
 -8.20525 14.17339 moveto

 28.04793 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -8.20525 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 28.04793 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 -96.36423 10.32114 ] concat

 pgfs



 0 setgray
 1 0 0 TeXcolorrgb 202720 290930 a Fc(s)p
Fb(1)p 0 TeXcolorgray 202720 290930 a


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 187.38797 14.17339 moveto

 229.31046 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 187.38797 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 229.31046 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

0 TeXcolorgray
 restore

 save
 0 1 0 TeXcolorrgb
 229.90819 14.17339 moveto

 254.8224 14.17339 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 229.90819 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 254.8224 14.17339 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 263.58209 11.48344 ] concat

 pgfs



 0 setgray
 0 1 0
TeXcolorrgb 202720 290930 a Fc(p)p Fb(1)p 0 TeXcolorgray
202720 290930 a


 pgfr

 restore

 restore

 save
 0 1 0 TeXcolorrgb
 194.47467 0.0 moveto

 233.56229 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 194.47467 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 233.56229 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save
 0 1 0
TeXcolorrgb
 234.16003 0.0 moveto

 278.91736 0.0 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 234.16003 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 278.91736 0.0 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 287.67705 -2.68994 ] concat

 pgfs



 0 setgray
 0 1 0 TeXcolorrgb 202720 290930
a Fc(p)p Fb(1)p 0 TeXcolorgray 202720 290930 a


 pgfr

 restore

 restore

 139.60811 -42.5202 moveto

 139.60811 -84.23148 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 139.60811 -84.23148 ] concat

 save [ ] 0.0 setdash 0 setlinejoin -5.20348 2.3356 moveto 0.29886
0.0 lineto -5.20348 -2.3356 lineto closepath gsave pgffc pgffill grestore
gsave pgfsc pgfstr grestore newpath restore

 restore

 save
 0 0 1
TeXcolorrgb
 -113.08836 -113.38724 moveto

 396.55646 -113.38724 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -113.08836 -113.38724 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 396.55646 -113.38724 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 405.31615 -116.21759 ] concat

 pgfs



 0 setgray
 0 0 1 TeXcolorrgb 202720 290930
a Fj(template)p 0 TeXcolorgray 202720 290930 a


 pgfr

 restore

 restore

 0.29886 -141.73404 moveto

 198.12878 -141.73404 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 0.29886 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 198.12878 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save
 0 1 0
TeXcolorrgb
 198.72653 -141.73404 moveto

 278.91736 -141.73404 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 198.72653 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore

 save

 [1.0 0.0 0.0 1.0 278.91736 -141.73404 ] concat

 save [ ] 0.0 setdash 2 setlinecap 0.09961 -2.5903 moveto 0.09961 2.5903
lineto pgfstr restore

 restore
 0 TeXcolorgray
 restore

 save

 save

 [1.0 0.0 0.0 1.0 287.67705 -144.49272 ] concat

 pgfs



 0 setgray
 202720 290930 a Fd(contig)333
b(mis)f(\340)g(jour)202720 290930 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0
TeXcolorgray 187246 314078 a Fo(F)138 b Fl(I)e(G)g(U)g(R)g(E)754
b Fo(2:)688 b(Ill.)184409 325796 y(Et)g(la)g(re)g(du)h(blabla)f(pe)g
(\347a)g(passe)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
