# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
check_PROGRAMS = common_stringutil$(EXEEXT) common_histogram$(EXEEXT) \
	common_bitutil$(EXEEXT) common_kmer$(EXEEXT) \
	common_sequence$(EXEEXT) common_KmerIterator$(EXEEXT) \
	common_sam$(EXEEXT) BloomFilter$(EXEEXT) \
	Konnector_DBGBloom$(EXEEXT) \
	Konnector_DBGBloomAlgorithms$(EXEEXT) \
	graph_ConstrainedBFSVisitor$(EXEEXT) \
	graph_BidirectionalBFS$(EXEEXT) graph_AllPathsSearch$(EXEEXT) \
	graph_HashGraph$(EXEEXT) \
	graph_ConstrainedBidiBFSVisitor$(EXEEXT) \
	Konnector_konnector$(EXEEXT)
TESTS = $(am__EXEEXT_1)
subdir = Unittest
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__dirstamp = $(am__leading_dot)dirstamp
am_BloomFilter_OBJECTS = Konnector/BloomFilter-BloomFilter.$(OBJEXT)
BloomFilter_OBJECTS = $(am_BloomFilter_OBJECTS)
am__DEPENDENCIES_1 =
BloomFilter_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
BloomFilter_LINK = $(CXXLD) $(BloomFilter_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_Konnector_DBGBloom_OBJECTS =  \
	Konnector/Konnector_DBGBloom-DBGBloomTest.$(OBJEXT)
Konnector_DBGBloom_OBJECTS = $(am_Konnector_DBGBloom_OBJECTS)
Konnector_DBGBloom_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
Konnector_DBGBloom_LINK = $(CXXLD) $(Konnector_DBGBloom_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_Konnector_DBGBloomAlgorithms_OBJECTS = Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.$(OBJEXT)
Konnector_DBGBloomAlgorithms_OBJECTS =  \
	$(am_Konnector_DBGBloomAlgorithms_OBJECTS)
Konnector_DBGBloomAlgorithms_DEPENDENCIES =  \
	$(top_builddir)/Common/libcommon.a $(am__DEPENDENCIES_1)
Konnector_DBGBloomAlgorithms_LINK = $(CXXLD) \
	$(Konnector_DBGBloomAlgorithms_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_Konnector_konnector_OBJECTS =  \
	Konnector/Konnector_konnector-konnectorTest.$(OBJEXT)
Konnector_konnector_OBJECTS = $(am_Konnector_konnector_OBJECTS)
Konnector_konnector_DEPENDENCIES = $(top_builddir)/Align/libalign.a \
	$(top_builddir)/Common/libcommon.a $(am__DEPENDENCIES_1)
Konnector_konnector_LINK = $(CXXLD) $(Konnector_konnector_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_common_KmerIterator_OBJECTS =  \
	Common/common_KmerIterator-KmerIteratorTest.$(OBJEXT)
common_KmerIterator_OBJECTS = $(am_common_KmerIterator_OBJECTS)
common_KmerIterator_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
am_common_bitutil_OBJECTS =  \
	Common/common_bitutil-BitUtilTest.$(OBJEXT)
common_bitutil_OBJECTS = $(am_common_bitutil_OBJECTS)
common_bitutil_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_common_histogram_OBJECTS =  \
	Common/common_histogram-HistogramTest.$(OBJEXT)
common_histogram_OBJECTS = $(am_common_histogram_OBJECTS)
common_histogram_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_common_kmer_OBJECTS = Common/common_kmer-KmerTest.$(OBJEXT)
common_kmer_OBJECTS = $(am_common_kmer_OBJECTS)
common_kmer_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
am_common_sam_OBJECTS = Common/common_sam-SAM.$(OBJEXT)
common_sam_OBJECTS = $(am_common_sam_OBJECTS)
common_sam_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
am_common_sequence_OBJECTS =  \
	Common/common_sequence-Sequence.$(OBJEXT)
common_sequence_OBJECTS = $(am_common_sequence_OBJECTS)
common_sequence_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
am_common_stringutil_OBJECTS =  \
	Common/common_stringutil-StringUtilTest.$(OBJEXT)
common_stringutil_OBJECTS = $(am_common_stringutil_OBJECTS)
common_stringutil_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_graph_AllPathsSearch_OBJECTS =  \
	Graph/graph_AllPathsSearch-AllPathsSearchTest.$(OBJEXT)
graph_AllPathsSearch_OBJECTS = $(am_graph_AllPathsSearch_OBJECTS)
graph_AllPathsSearch_DEPENDENCIES =  \
	$(top_builddir)/Common/libcommon.a $(am__DEPENDENCIES_1)
am_graph_BidirectionalBFS_OBJECTS =  \
	Graph/graph_BidirectionalBFS-BidirectionalBFSTest.$(OBJEXT)
graph_BidirectionalBFS_OBJECTS = $(am_graph_BidirectionalBFS_OBJECTS)
graph_BidirectionalBFS_DEPENDENCIES =  \
	$(top_builddir)/Common/libcommon.a $(am__DEPENDENCIES_1)
am_graph_ConstrainedBFSVisitor_OBJECTS = Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.$(OBJEXT)
graph_ConstrainedBFSVisitor_OBJECTS =  \
	$(am_graph_ConstrainedBFSVisitor_OBJECTS)
graph_ConstrainedBFSVisitor_DEPENDENCIES =  \
	$(top_builddir)/Common/libcommon.a $(am__DEPENDENCIES_1)
am_graph_ConstrainedBidiBFSVisitor_OBJECTS = Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.$(OBJEXT)
graph_ConstrainedBidiBFSVisitor_OBJECTS =  \
	$(am_graph_ConstrainedBidiBFSVisitor_OBJECTS)
graph_ConstrainedBidiBFSVisitor_DEPENDENCIES =  \
	$(top_builddir)/Common/libcommon.a $(am__DEPENDENCIES_1)
am_graph_HashGraph_OBJECTS =  \
	Graph/graph_HashGraph-HashGraphTest.$(OBJEXT)
graph_HashGraph_OBJECTS = $(am_graph_HashGraph_OBJECTS)
graph_HashGraph_DEPENDENCIES = $(top_builddir)/Common/libcommon.a \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(BloomFilter_SOURCES) $(Konnector_DBGBloom_SOURCES) \
	$(Konnector_DBGBloomAlgorithms_SOURCES) \
	$(Konnector_konnector_SOURCES) $(common_KmerIterator_SOURCES) \
	$(common_bitutil_SOURCES) $(common_histogram_SOURCES) \
	$(common_kmer_SOURCES) $(common_sam_SOURCES) \
	$(common_sequence_SOURCES) $(common_stringutil_SOURCES) \
	$(graph_AllPathsSearch_SOURCES) \
	$(graph_BidirectionalBFS_SOURCES) \
	$(graph_ConstrainedBFSVisitor_SOURCES) \
	$(graph_ConstrainedBidiBFSVisitor_SOURCES) \
	$(graph_HashGraph_SOURCES)
DIST_SOURCES = $(BloomFilter_SOURCES) $(Konnector_DBGBloom_SOURCES) \
	$(Konnector_DBGBloomAlgorithms_SOURCES) \
	$(Konnector_konnector_SOURCES) $(common_KmerIterator_SOURCES) \
	$(common_bitutil_SOURCES) $(common_histogram_SOURCES) \
	$(common_kmer_SOURCES) $(common_sam_SOURCES) \
	$(common_sequence_SOURCES) $(common_stringutil_SOURCES) \
	$(graph_AllPathsSearch_SOURCES) \
	$(graph_BidirectionalBFS_SOURCES) \
	$(graph_ConstrainedBFSVisitor_SOURCES) \
	$(graph_ConstrainedBidiBFSVisitor_SOURCES) \
	$(graph_HashGraph_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
am__EXEEXT_1 = common_stringutil$(EXEEXT) common_histogram$(EXEEXT) \
	common_bitutil$(EXEEXT) common_kmer$(EXEEXT) \
	common_sequence$(EXEEXT) common_KmerIterator$(EXEEXT) \
	common_sam$(EXEEXT) BloomFilter$(EXEEXT) \
	Konnector_DBGBloom$(EXEEXT) \
	Konnector_DBGBloomAlgorithms$(EXEEXT) \
	graph_ConstrainedBFSVisitor$(EXEEXT) \
	graph_BidirectionalBFS$(EXEEXT) graph_AllPathsSearch$(EXEEXT) \
	graph_HashGraph$(EXEEXT) \
	graph_ConstrainedBidiBFSVisitor$(EXEEXT) \
	Konnector_konnector$(EXEEXT)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GHC = @GHC@
GHC_PKG = @GHC_PKG@
GREP = @GREP@
GTEST_LIBS = @GTEST_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPI_LIBS = @MPI_LIBS@
OBJEXT = @OBJEXT@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
UNIT_TESTS = common_stringutil common_histogram common_bitutil \
	common_kmer common_sequence common_KmerIterator common_sam \
	BloomFilter Konnector_DBGBloom Konnector_DBGBloomAlgorithms \
	graph_ConstrainedBFSVisitor graph_BidirectionalBFS \
	graph_AllPathsSearch graph_HashGraph \
	graph_ConstrainedBidiBFSVisitor Konnector_konnector
common_stringutil_SOURCES = Common/StringUtilTest.cpp
common_stringutil_CPPFLAGS = -I$(top_srcdir)
common_stringutil_LDADD = $(GTEST_LIBS)
common_histogram_SOURCES = Common/HistogramTest.cpp
common_histogram_CPPFLAGS = -I$(top_srcdir)
common_histogram_LDADD = $(GTEST_LIBS)
common_bitutil_SOURCES = Common/BitUtilTest.cpp
common_bitutil_CPPFLAGS = -I$(top_srcdir)
common_bitutil_LDADD = $(GTEST_LIBS)
common_kmer_SOURCES = Common/KmerTest.cpp
common_kmer_CPPFLAGS = -I$(top_srcdir)
common_kmer_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
common_sequence_SOURCES = Common/Sequence.cc
common_sequence_CPPFLAGS = -I$(top_srcdir)
common_sequence_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
common_KmerIterator_SOURCES = Common/KmerIteratorTest.cpp
common_KmerIterator_CPPFLAGS = -I$(top_srcdir)
common_KmerIterator_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
common_sam_SOURCES = Common/SAM.cc
common_sam_CPPFLAGS = -I$(top_srcdir)
common_sam_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
BloomFilter_SOURCES = Konnector/BloomFilter.cc
BloomFilter_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
BloomFilter_CXXFLAGS = $(AM_CXXFLAGS) $(OPENMP_CXXFLAGS)
BloomFilter_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
Konnector_DBGBloom_SOURCES = Konnector/DBGBloomTest.cpp
Konnector_DBGBloom_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
Konnector_DBGBloom_CXXFLAGS = $(AM_CXXFLAGS) $(OPENMP_CXXFLAGS)
Konnector_DBGBloom_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
Konnector_DBGBloomAlgorithms_SOURCES = Konnector/DBGBloomAlgorithmsTest.cpp
Konnector_DBGBloomAlgorithms_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
Konnector_DBGBloomAlgorithms_CXXFLAGS = $(AM_CXXFLAGS) $(OPENMP_CXXFLAGS)
Konnector_DBGBloomAlgorithms_LDADD = \
	$(top_builddir)/Common/libcommon.a \
	$(GTEST_LIBS)

graph_ConstrainedBFSVisitor_SOURCES = Graph/ConstrainedBFSVisitorTest.cpp
graph_ConstrainedBFSVisitor_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
graph_ConstrainedBFSVisitor_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
graph_BidirectionalBFS_SOURCES = Graph/BidirectionalBFSTest.cpp
graph_BidirectionalBFS_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
graph_BidirectionalBFS_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
graph_AllPathsSearch_SOURCES = Graph/AllPathsSearchTest.cpp
graph_AllPathsSearch_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
graph_AllPathsSearch_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
graph_HashGraph_SOURCES = Graph/HashGraphTest.cpp
graph_HashGraph_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
graph_HashGraph_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
graph_ConstrainedBidiBFSVisitor_SOURCES = \
	Graph/ConstrainedBidiBFSVisitorTest.cpp

graph_ConstrainedBidiBFSVisitor_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
graph_ConstrainedBidiBFSVisitor_LDADD = $(top_builddir)/Common/libcommon.a $(GTEST_LIBS)
Konnector_konnector_SOURCES = \
	Konnector/konnectorTest.cpp

Konnector_konnector_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/Common
Konnector_konnector_CXXFLAGS = $(AM_CXXFLAGS) $(OPENMP_CXXFLAGS)
Konnector_konnector_LDADD = \
	$(top_builddir)/Align/libalign.a \
	$(top_builddir)/Common/libcommon.a $(GTEST_LIBS)

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Unittest/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Unittest/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
Konnector/$(am__dirstamp):
	@$(MKDIR_P) Konnector
	@: > Konnector/$(am__dirstamp)
Konnector/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) Konnector/$(DEPDIR)
	@: > Konnector/$(DEPDIR)/$(am__dirstamp)
Konnector/BloomFilter-BloomFilter.$(OBJEXT):  \
	Konnector/$(am__dirstamp) Konnector/$(DEPDIR)/$(am__dirstamp)

BloomFilter$(EXEEXT): $(BloomFilter_OBJECTS) $(BloomFilter_DEPENDENCIES) $(EXTRA_BloomFilter_DEPENDENCIES) 
	@rm -f BloomFilter$(EXEEXT)
	$(AM_V_CXXLD)$(BloomFilter_LINK) $(BloomFilter_OBJECTS) $(BloomFilter_LDADD) $(LIBS)
Konnector/Konnector_DBGBloom-DBGBloomTest.$(OBJEXT):  \
	Konnector/$(am__dirstamp) Konnector/$(DEPDIR)/$(am__dirstamp)

Konnector_DBGBloom$(EXEEXT): $(Konnector_DBGBloom_OBJECTS) $(Konnector_DBGBloom_DEPENDENCIES) $(EXTRA_Konnector_DBGBloom_DEPENDENCIES) 
	@rm -f Konnector_DBGBloom$(EXEEXT)
	$(AM_V_CXXLD)$(Konnector_DBGBloom_LINK) $(Konnector_DBGBloom_OBJECTS) $(Konnector_DBGBloom_LDADD) $(LIBS)
Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.$(OBJEXT):  \
	Konnector/$(am__dirstamp) Konnector/$(DEPDIR)/$(am__dirstamp)

Konnector_DBGBloomAlgorithms$(EXEEXT): $(Konnector_DBGBloomAlgorithms_OBJECTS) $(Konnector_DBGBloomAlgorithms_DEPENDENCIES) $(EXTRA_Konnector_DBGBloomAlgorithms_DEPENDENCIES) 
	@rm -f Konnector_DBGBloomAlgorithms$(EXEEXT)
	$(AM_V_CXXLD)$(Konnector_DBGBloomAlgorithms_LINK) $(Konnector_DBGBloomAlgorithms_OBJECTS) $(Konnector_DBGBloomAlgorithms_LDADD) $(LIBS)
Konnector/Konnector_konnector-konnectorTest.$(OBJEXT):  \
	Konnector/$(am__dirstamp) Konnector/$(DEPDIR)/$(am__dirstamp)

Konnector_konnector$(EXEEXT): $(Konnector_konnector_OBJECTS) $(Konnector_konnector_DEPENDENCIES) $(EXTRA_Konnector_konnector_DEPENDENCIES) 
	@rm -f Konnector_konnector$(EXEEXT)
	$(AM_V_CXXLD)$(Konnector_konnector_LINK) $(Konnector_konnector_OBJECTS) $(Konnector_konnector_LDADD) $(LIBS)
Common/$(am__dirstamp):
	@$(MKDIR_P) Common
	@: > Common/$(am__dirstamp)
Common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) Common/$(DEPDIR)
	@: > Common/$(DEPDIR)/$(am__dirstamp)
Common/common_KmerIterator-KmerIteratorTest.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)

common_KmerIterator$(EXEEXT): $(common_KmerIterator_OBJECTS) $(common_KmerIterator_DEPENDENCIES) $(EXTRA_common_KmerIterator_DEPENDENCIES) 
	@rm -f common_KmerIterator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_KmerIterator_OBJECTS) $(common_KmerIterator_LDADD) $(LIBS)
Common/common_bitutil-BitUtilTest.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)

common_bitutil$(EXEEXT): $(common_bitutil_OBJECTS) $(common_bitutil_DEPENDENCIES) $(EXTRA_common_bitutil_DEPENDENCIES) 
	@rm -f common_bitutil$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_bitutil_OBJECTS) $(common_bitutil_LDADD) $(LIBS)
Common/common_histogram-HistogramTest.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)

common_histogram$(EXEEXT): $(common_histogram_OBJECTS) $(common_histogram_DEPENDENCIES) $(EXTRA_common_histogram_DEPENDENCIES) 
	@rm -f common_histogram$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_histogram_OBJECTS) $(common_histogram_LDADD) $(LIBS)
Common/common_kmer-KmerTest.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)

common_kmer$(EXEEXT): $(common_kmer_OBJECTS) $(common_kmer_DEPENDENCIES) $(EXTRA_common_kmer_DEPENDENCIES) 
	@rm -f common_kmer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_kmer_OBJECTS) $(common_kmer_LDADD) $(LIBS)
Common/common_sam-SAM.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)

common_sam$(EXEEXT): $(common_sam_OBJECTS) $(common_sam_DEPENDENCIES) $(EXTRA_common_sam_DEPENDENCIES) 
	@rm -f common_sam$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_sam_OBJECTS) $(common_sam_LDADD) $(LIBS)
Common/common_sequence-Sequence.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)

common_sequence$(EXEEXT): $(common_sequence_OBJECTS) $(common_sequence_DEPENDENCIES) $(EXTRA_common_sequence_DEPENDENCIES) 
	@rm -f common_sequence$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_sequence_OBJECTS) $(common_sequence_LDADD) $(LIBS)
Common/common_stringutil-StringUtilTest.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)

common_stringutil$(EXEEXT): $(common_stringutil_OBJECTS) $(common_stringutil_DEPENDENCIES) $(EXTRA_common_stringutil_DEPENDENCIES) 
	@rm -f common_stringutil$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(common_stringutil_OBJECTS) $(common_stringutil_LDADD) $(LIBS)
Graph/$(am__dirstamp):
	@$(MKDIR_P) Graph
	@: > Graph/$(am__dirstamp)
Graph/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) Graph/$(DEPDIR)
	@: > Graph/$(DEPDIR)/$(am__dirstamp)
Graph/graph_AllPathsSearch-AllPathsSearchTest.$(OBJEXT):  \
	Graph/$(am__dirstamp) Graph/$(DEPDIR)/$(am__dirstamp)

graph_AllPathsSearch$(EXEEXT): $(graph_AllPathsSearch_OBJECTS) $(graph_AllPathsSearch_DEPENDENCIES) $(EXTRA_graph_AllPathsSearch_DEPENDENCIES) 
	@rm -f graph_AllPathsSearch$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graph_AllPathsSearch_OBJECTS) $(graph_AllPathsSearch_LDADD) $(LIBS)
Graph/graph_BidirectionalBFS-BidirectionalBFSTest.$(OBJEXT):  \
	Graph/$(am__dirstamp) Graph/$(DEPDIR)/$(am__dirstamp)

graph_BidirectionalBFS$(EXEEXT): $(graph_BidirectionalBFS_OBJECTS) $(graph_BidirectionalBFS_DEPENDENCIES) $(EXTRA_graph_BidirectionalBFS_DEPENDENCIES) 
	@rm -f graph_BidirectionalBFS$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graph_BidirectionalBFS_OBJECTS) $(graph_BidirectionalBFS_LDADD) $(LIBS)
Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.$(OBJEXT):  \
	Graph/$(am__dirstamp) Graph/$(DEPDIR)/$(am__dirstamp)

graph_ConstrainedBFSVisitor$(EXEEXT): $(graph_ConstrainedBFSVisitor_OBJECTS) $(graph_ConstrainedBFSVisitor_DEPENDENCIES) $(EXTRA_graph_ConstrainedBFSVisitor_DEPENDENCIES) 
	@rm -f graph_ConstrainedBFSVisitor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graph_ConstrainedBFSVisitor_OBJECTS) $(graph_ConstrainedBFSVisitor_LDADD) $(LIBS)
Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.$(OBJEXT):  \
	Graph/$(am__dirstamp) Graph/$(DEPDIR)/$(am__dirstamp)

graph_ConstrainedBidiBFSVisitor$(EXEEXT): $(graph_ConstrainedBidiBFSVisitor_OBJECTS) $(graph_ConstrainedBidiBFSVisitor_DEPENDENCIES) $(EXTRA_graph_ConstrainedBidiBFSVisitor_DEPENDENCIES) 
	@rm -f graph_ConstrainedBidiBFSVisitor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graph_ConstrainedBidiBFSVisitor_OBJECTS) $(graph_ConstrainedBidiBFSVisitor_LDADD) $(LIBS)
Graph/graph_HashGraph-HashGraphTest.$(OBJEXT): Graph/$(am__dirstamp) \
	Graph/$(DEPDIR)/$(am__dirstamp)

graph_HashGraph$(EXEEXT): $(graph_HashGraph_OBJECTS) $(graph_HashGraph_DEPENDENCIES) $(EXTRA_graph_HashGraph_DEPENDENCIES) 
	@rm -f graph_HashGraph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graph_HashGraph_OBJECTS) $(graph_HashGraph_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f Common/*.$(OBJEXT)
	-rm -f Graph/*.$(OBJEXT)
	-rm -f Konnector/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_bitutil-BitUtilTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_histogram-HistogramTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_kmer-KmerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_sam-SAM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_sequence-Sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/common_stringutil-StringUtilTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Konnector/BloomFilter-BloomFilter.o: Konnector/BloomFilter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BloomFilter_CPPFLAGS) $(CPPFLAGS) $(BloomFilter_CXXFLAGS) $(CXXFLAGS) -MT Konnector/BloomFilter-BloomFilter.o -MD -MP -MF Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Tpo -c -o Konnector/BloomFilter-BloomFilter.o `test -f 'Konnector/BloomFilter.cc' || echo '$(srcdir)/'`Konnector/BloomFilter.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Tpo Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/BloomFilter.cc' object='Konnector/BloomFilter-BloomFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BloomFilter_CPPFLAGS) $(CPPFLAGS) $(BloomFilter_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/BloomFilter-BloomFilter.o `test -f 'Konnector/BloomFilter.cc' || echo '$(srcdir)/'`Konnector/BloomFilter.cc

Konnector/BloomFilter-BloomFilter.obj: Konnector/BloomFilter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BloomFilter_CPPFLAGS) $(CPPFLAGS) $(BloomFilter_CXXFLAGS) $(CXXFLAGS) -MT Konnector/BloomFilter-BloomFilter.obj -MD -MP -MF Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Tpo -c -o Konnector/BloomFilter-BloomFilter.obj `if test -f 'Konnector/BloomFilter.cc'; then $(CYGPATH_W) 'Konnector/BloomFilter.cc'; else $(CYGPATH_W) '$(srcdir)/Konnector/BloomFilter.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Tpo Konnector/$(DEPDIR)/BloomFilter-BloomFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/BloomFilter.cc' object='Konnector/BloomFilter-BloomFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(BloomFilter_CPPFLAGS) $(CPPFLAGS) $(BloomFilter_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/BloomFilter-BloomFilter.obj `if test -f 'Konnector/BloomFilter.cc'; then $(CYGPATH_W) 'Konnector/BloomFilter.cc'; else $(CYGPATH_W) '$(srcdir)/Konnector/BloomFilter.cc'; fi`

Konnector/Konnector_DBGBloom-DBGBloomTest.o: Konnector/DBGBloomTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloom_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloom_CXXFLAGS) $(CXXFLAGS) -MT Konnector/Konnector_DBGBloom-DBGBloomTest.o -MD -MP -MF Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Tpo -c -o Konnector/Konnector_DBGBloom-DBGBloomTest.o `test -f 'Konnector/DBGBloomTest.cpp' || echo '$(srcdir)/'`Konnector/DBGBloomTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Tpo Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/DBGBloomTest.cpp' object='Konnector/Konnector_DBGBloom-DBGBloomTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloom_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloom_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/Konnector_DBGBloom-DBGBloomTest.o `test -f 'Konnector/DBGBloomTest.cpp' || echo '$(srcdir)/'`Konnector/DBGBloomTest.cpp

Konnector/Konnector_DBGBloom-DBGBloomTest.obj: Konnector/DBGBloomTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloom_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloom_CXXFLAGS) $(CXXFLAGS) -MT Konnector/Konnector_DBGBloom-DBGBloomTest.obj -MD -MP -MF Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Tpo -c -o Konnector/Konnector_DBGBloom-DBGBloomTest.obj `if test -f 'Konnector/DBGBloomTest.cpp'; then $(CYGPATH_W) 'Konnector/DBGBloomTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Konnector/DBGBloomTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Tpo Konnector/$(DEPDIR)/Konnector_DBGBloom-DBGBloomTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/DBGBloomTest.cpp' object='Konnector/Konnector_DBGBloom-DBGBloomTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloom_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloom_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/Konnector_DBGBloom-DBGBloomTest.obj `if test -f 'Konnector/DBGBloomTest.cpp'; then $(CYGPATH_W) 'Konnector/DBGBloomTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Konnector/DBGBloomTest.cpp'; fi`

Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.o: Konnector/DBGBloomAlgorithmsTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloomAlgorithms_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloomAlgorithms_CXXFLAGS) $(CXXFLAGS) -MT Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.o -MD -MP -MF Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Tpo -c -o Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.o `test -f 'Konnector/DBGBloomAlgorithmsTest.cpp' || echo '$(srcdir)/'`Konnector/DBGBloomAlgorithmsTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Tpo Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/DBGBloomAlgorithmsTest.cpp' object='Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloomAlgorithms_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloomAlgorithms_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.o `test -f 'Konnector/DBGBloomAlgorithmsTest.cpp' || echo '$(srcdir)/'`Konnector/DBGBloomAlgorithmsTest.cpp

Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.obj: Konnector/DBGBloomAlgorithmsTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloomAlgorithms_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloomAlgorithms_CXXFLAGS) $(CXXFLAGS) -MT Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.obj -MD -MP -MF Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Tpo -c -o Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.obj `if test -f 'Konnector/DBGBloomAlgorithmsTest.cpp'; then $(CYGPATH_W) 'Konnector/DBGBloomAlgorithmsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Konnector/DBGBloomAlgorithmsTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Tpo Konnector/$(DEPDIR)/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/DBGBloomAlgorithmsTest.cpp' object='Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_DBGBloomAlgorithms_CPPFLAGS) $(CPPFLAGS) $(Konnector_DBGBloomAlgorithms_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/Konnector_DBGBloomAlgorithms-DBGBloomAlgorithmsTest.obj `if test -f 'Konnector/DBGBloomAlgorithmsTest.cpp'; then $(CYGPATH_W) 'Konnector/DBGBloomAlgorithmsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Konnector/DBGBloomAlgorithmsTest.cpp'; fi`

Konnector/Konnector_konnector-konnectorTest.o: Konnector/konnectorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_konnector_CPPFLAGS) $(CPPFLAGS) $(Konnector_konnector_CXXFLAGS) $(CXXFLAGS) -MT Konnector/Konnector_konnector-konnectorTest.o -MD -MP -MF Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Tpo -c -o Konnector/Konnector_konnector-konnectorTest.o `test -f 'Konnector/konnectorTest.cpp' || echo '$(srcdir)/'`Konnector/konnectorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Tpo Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/konnectorTest.cpp' object='Konnector/Konnector_konnector-konnectorTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_konnector_CPPFLAGS) $(CPPFLAGS) $(Konnector_konnector_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/Konnector_konnector-konnectorTest.o `test -f 'Konnector/konnectorTest.cpp' || echo '$(srcdir)/'`Konnector/konnectorTest.cpp

Konnector/Konnector_konnector-konnectorTest.obj: Konnector/konnectorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_konnector_CPPFLAGS) $(CPPFLAGS) $(Konnector_konnector_CXXFLAGS) $(CXXFLAGS) -MT Konnector/Konnector_konnector-konnectorTest.obj -MD -MP -MF Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Tpo -c -o Konnector/Konnector_konnector-konnectorTest.obj `if test -f 'Konnector/konnectorTest.cpp'; then $(CYGPATH_W) 'Konnector/konnectorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Konnector/konnectorTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Tpo Konnector/$(DEPDIR)/Konnector_konnector-konnectorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Konnector/konnectorTest.cpp' object='Konnector/Konnector_konnector-konnectorTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Konnector_konnector_CPPFLAGS) $(CPPFLAGS) $(Konnector_konnector_CXXFLAGS) $(CXXFLAGS) -c -o Konnector/Konnector_konnector-konnectorTest.obj `if test -f 'Konnector/konnectorTest.cpp'; then $(CYGPATH_W) 'Konnector/konnectorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Konnector/konnectorTest.cpp'; fi`

Common/common_KmerIterator-KmerIteratorTest.o: Common/KmerIteratorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_KmerIterator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_KmerIterator-KmerIteratorTest.o -MD -MP -MF Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Tpo -c -o Common/common_KmerIterator-KmerIteratorTest.o `test -f 'Common/KmerIteratorTest.cpp' || echo '$(srcdir)/'`Common/KmerIteratorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Tpo Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/KmerIteratorTest.cpp' object='Common/common_KmerIterator-KmerIteratorTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_KmerIterator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_KmerIterator-KmerIteratorTest.o `test -f 'Common/KmerIteratorTest.cpp' || echo '$(srcdir)/'`Common/KmerIteratorTest.cpp

Common/common_KmerIterator-KmerIteratorTest.obj: Common/KmerIteratorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_KmerIterator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_KmerIterator-KmerIteratorTest.obj -MD -MP -MF Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Tpo -c -o Common/common_KmerIterator-KmerIteratorTest.obj `if test -f 'Common/KmerIteratorTest.cpp'; then $(CYGPATH_W) 'Common/KmerIteratorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/KmerIteratorTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Tpo Common/$(DEPDIR)/common_KmerIterator-KmerIteratorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/KmerIteratorTest.cpp' object='Common/common_KmerIterator-KmerIteratorTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_KmerIterator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_KmerIterator-KmerIteratorTest.obj `if test -f 'Common/KmerIteratorTest.cpp'; then $(CYGPATH_W) 'Common/KmerIteratorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/KmerIteratorTest.cpp'; fi`

Common/common_bitutil-BitUtilTest.o: Common/BitUtilTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_bitutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_bitutil-BitUtilTest.o -MD -MP -MF Common/$(DEPDIR)/common_bitutil-BitUtilTest.Tpo -c -o Common/common_bitutil-BitUtilTest.o `test -f 'Common/BitUtilTest.cpp' || echo '$(srcdir)/'`Common/BitUtilTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_bitutil-BitUtilTest.Tpo Common/$(DEPDIR)/common_bitutil-BitUtilTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/BitUtilTest.cpp' object='Common/common_bitutil-BitUtilTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_bitutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_bitutil-BitUtilTest.o `test -f 'Common/BitUtilTest.cpp' || echo '$(srcdir)/'`Common/BitUtilTest.cpp

Common/common_bitutil-BitUtilTest.obj: Common/BitUtilTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_bitutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_bitutil-BitUtilTest.obj -MD -MP -MF Common/$(DEPDIR)/common_bitutil-BitUtilTest.Tpo -c -o Common/common_bitutil-BitUtilTest.obj `if test -f 'Common/BitUtilTest.cpp'; then $(CYGPATH_W) 'Common/BitUtilTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/BitUtilTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_bitutil-BitUtilTest.Tpo Common/$(DEPDIR)/common_bitutil-BitUtilTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/BitUtilTest.cpp' object='Common/common_bitutil-BitUtilTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_bitutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_bitutil-BitUtilTest.obj `if test -f 'Common/BitUtilTest.cpp'; then $(CYGPATH_W) 'Common/BitUtilTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/BitUtilTest.cpp'; fi`

Common/common_histogram-HistogramTest.o: Common/HistogramTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_histogram_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_histogram-HistogramTest.o -MD -MP -MF Common/$(DEPDIR)/common_histogram-HistogramTest.Tpo -c -o Common/common_histogram-HistogramTest.o `test -f 'Common/HistogramTest.cpp' || echo '$(srcdir)/'`Common/HistogramTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_histogram-HistogramTest.Tpo Common/$(DEPDIR)/common_histogram-HistogramTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/HistogramTest.cpp' object='Common/common_histogram-HistogramTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_histogram_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_histogram-HistogramTest.o `test -f 'Common/HistogramTest.cpp' || echo '$(srcdir)/'`Common/HistogramTest.cpp

Common/common_histogram-HistogramTest.obj: Common/HistogramTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_histogram_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_histogram-HistogramTest.obj -MD -MP -MF Common/$(DEPDIR)/common_histogram-HistogramTest.Tpo -c -o Common/common_histogram-HistogramTest.obj `if test -f 'Common/HistogramTest.cpp'; then $(CYGPATH_W) 'Common/HistogramTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/HistogramTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_histogram-HistogramTest.Tpo Common/$(DEPDIR)/common_histogram-HistogramTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/HistogramTest.cpp' object='Common/common_histogram-HistogramTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_histogram_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_histogram-HistogramTest.obj `if test -f 'Common/HistogramTest.cpp'; then $(CYGPATH_W) 'Common/HistogramTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/HistogramTest.cpp'; fi`

Common/common_kmer-KmerTest.o: Common/KmerTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_kmer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_kmer-KmerTest.o -MD -MP -MF Common/$(DEPDIR)/common_kmer-KmerTest.Tpo -c -o Common/common_kmer-KmerTest.o `test -f 'Common/KmerTest.cpp' || echo '$(srcdir)/'`Common/KmerTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_kmer-KmerTest.Tpo Common/$(DEPDIR)/common_kmer-KmerTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/KmerTest.cpp' object='Common/common_kmer-KmerTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_kmer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_kmer-KmerTest.o `test -f 'Common/KmerTest.cpp' || echo '$(srcdir)/'`Common/KmerTest.cpp

Common/common_kmer-KmerTest.obj: Common/KmerTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_kmer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_kmer-KmerTest.obj -MD -MP -MF Common/$(DEPDIR)/common_kmer-KmerTest.Tpo -c -o Common/common_kmer-KmerTest.obj `if test -f 'Common/KmerTest.cpp'; then $(CYGPATH_W) 'Common/KmerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/KmerTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_kmer-KmerTest.Tpo Common/$(DEPDIR)/common_kmer-KmerTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/KmerTest.cpp' object='Common/common_kmer-KmerTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_kmer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_kmer-KmerTest.obj `if test -f 'Common/KmerTest.cpp'; then $(CYGPATH_W) 'Common/KmerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/KmerTest.cpp'; fi`

Common/common_sam-SAM.o: Common/SAM.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_sam-SAM.o -MD -MP -MF Common/$(DEPDIR)/common_sam-SAM.Tpo -c -o Common/common_sam-SAM.o `test -f 'Common/SAM.cc' || echo '$(srcdir)/'`Common/SAM.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_sam-SAM.Tpo Common/$(DEPDIR)/common_sam-SAM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/SAM.cc' object='Common/common_sam-SAM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_sam-SAM.o `test -f 'Common/SAM.cc' || echo '$(srcdir)/'`Common/SAM.cc

Common/common_sam-SAM.obj: Common/SAM.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_sam-SAM.obj -MD -MP -MF Common/$(DEPDIR)/common_sam-SAM.Tpo -c -o Common/common_sam-SAM.obj `if test -f 'Common/SAM.cc'; then $(CYGPATH_W) 'Common/SAM.cc'; else $(CYGPATH_W) '$(srcdir)/Common/SAM.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_sam-SAM.Tpo Common/$(DEPDIR)/common_sam-SAM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/SAM.cc' object='Common/common_sam-SAM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_sam-SAM.obj `if test -f 'Common/SAM.cc'; then $(CYGPATH_W) 'Common/SAM.cc'; else $(CYGPATH_W) '$(srcdir)/Common/SAM.cc'; fi`

Common/common_sequence-Sequence.o: Common/Sequence.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sequence_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_sequence-Sequence.o -MD -MP -MF Common/$(DEPDIR)/common_sequence-Sequence.Tpo -c -o Common/common_sequence-Sequence.o `test -f 'Common/Sequence.cc' || echo '$(srcdir)/'`Common/Sequence.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_sequence-Sequence.Tpo Common/$(DEPDIR)/common_sequence-Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/Sequence.cc' object='Common/common_sequence-Sequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sequence_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_sequence-Sequence.o `test -f 'Common/Sequence.cc' || echo '$(srcdir)/'`Common/Sequence.cc

Common/common_sequence-Sequence.obj: Common/Sequence.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sequence_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_sequence-Sequence.obj -MD -MP -MF Common/$(DEPDIR)/common_sequence-Sequence.Tpo -c -o Common/common_sequence-Sequence.obj `if test -f 'Common/Sequence.cc'; then $(CYGPATH_W) 'Common/Sequence.cc'; else $(CYGPATH_W) '$(srcdir)/Common/Sequence.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_sequence-Sequence.Tpo Common/$(DEPDIR)/common_sequence-Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/Sequence.cc' object='Common/common_sequence-Sequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_sequence_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_sequence-Sequence.obj `if test -f 'Common/Sequence.cc'; then $(CYGPATH_W) 'Common/Sequence.cc'; else $(CYGPATH_W) '$(srcdir)/Common/Sequence.cc'; fi`

Common/common_stringutil-StringUtilTest.o: Common/StringUtilTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_stringutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_stringutil-StringUtilTest.o -MD -MP -MF Common/$(DEPDIR)/common_stringutil-StringUtilTest.Tpo -c -o Common/common_stringutil-StringUtilTest.o `test -f 'Common/StringUtilTest.cpp' || echo '$(srcdir)/'`Common/StringUtilTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_stringutil-StringUtilTest.Tpo Common/$(DEPDIR)/common_stringutil-StringUtilTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/StringUtilTest.cpp' object='Common/common_stringutil-StringUtilTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_stringutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_stringutil-StringUtilTest.o `test -f 'Common/StringUtilTest.cpp' || echo '$(srcdir)/'`Common/StringUtilTest.cpp

Common/common_stringutil-StringUtilTest.obj: Common/StringUtilTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_stringutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/common_stringutil-StringUtilTest.obj -MD -MP -MF Common/$(DEPDIR)/common_stringutil-StringUtilTest.Tpo -c -o Common/common_stringutil-StringUtilTest.obj `if test -f 'Common/StringUtilTest.cpp'; then $(CYGPATH_W) 'Common/StringUtilTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/StringUtilTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/common_stringutil-StringUtilTest.Tpo Common/$(DEPDIR)/common_stringutil-StringUtilTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/StringUtilTest.cpp' object='Common/common_stringutil-StringUtilTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_stringutil_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/common_stringutil-StringUtilTest.obj `if test -f 'Common/StringUtilTest.cpp'; then $(CYGPATH_W) 'Common/StringUtilTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/StringUtilTest.cpp'; fi`

Graph/graph_AllPathsSearch-AllPathsSearchTest.o: Graph/AllPathsSearchTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_AllPathsSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_AllPathsSearch-AllPathsSearchTest.o -MD -MP -MF Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Tpo -c -o Graph/graph_AllPathsSearch-AllPathsSearchTest.o `test -f 'Graph/AllPathsSearchTest.cpp' || echo '$(srcdir)/'`Graph/AllPathsSearchTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Tpo Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/AllPathsSearchTest.cpp' object='Graph/graph_AllPathsSearch-AllPathsSearchTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_AllPathsSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_AllPathsSearch-AllPathsSearchTest.o `test -f 'Graph/AllPathsSearchTest.cpp' || echo '$(srcdir)/'`Graph/AllPathsSearchTest.cpp

Graph/graph_AllPathsSearch-AllPathsSearchTest.obj: Graph/AllPathsSearchTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_AllPathsSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_AllPathsSearch-AllPathsSearchTest.obj -MD -MP -MF Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Tpo -c -o Graph/graph_AllPathsSearch-AllPathsSearchTest.obj `if test -f 'Graph/AllPathsSearchTest.cpp'; then $(CYGPATH_W) 'Graph/AllPathsSearchTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/AllPathsSearchTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Tpo Graph/$(DEPDIR)/graph_AllPathsSearch-AllPathsSearchTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/AllPathsSearchTest.cpp' object='Graph/graph_AllPathsSearch-AllPathsSearchTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_AllPathsSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_AllPathsSearch-AllPathsSearchTest.obj `if test -f 'Graph/AllPathsSearchTest.cpp'; then $(CYGPATH_W) 'Graph/AllPathsSearchTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/AllPathsSearchTest.cpp'; fi`

Graph/graph_BidirectionalBFS-BidirectionalBFSTest.o: Graph/BidirectionalBFSTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_BidirectionalBFS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_BidirectionalBFS-BidirectionalBFSTest.o -MD -MP -MF Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Tpo -c -o Graph/graph_BidirectionalBFS-BidirectionalBFSTest.o `test -f 'Graph/BidirectionalBFSTest.cpp' || echo '$(srcdir)/'`Graph/BidirectionalBFSTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Tpo Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/BidirectionalBFSTest.cpp' object='Graph/graph_BidirectionalBFS-BidirectionalBFSTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_BidirectionalBFS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_BidirectionalBFS-BidirectionalBFSTest.o `test -f 'Graph/BidirectionalBFSTest.cpp' || echo '$(srcdir)/'`Graph/BidirectionalBFSTest.cpp

Graph/graph_BidirectionalBFS-BidirectionalBFSTest.obj: Graph/BidirectionalBFSTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_BidirectionalBFS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_BidirectionalBFS-BidirectionalBFSTest.obj -MD -MP -MF Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Tpo -c -o Graph/graph_BidirectionalBFS-BidirectionalBFSTest.obj `if test -f 'Graph/BidirectionalBFSTest.cpp'; then $(CYGPATH_W) 'Graph/BidirectionalBFSTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/BidirectionalBFSTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Tpo Graph/$(DEPDIR)/graph_BidirectionalBFS-BidirectionalBFSTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/BidirectionalBFSTest.cpp' object='Graph/graph_BidirectionalBFS-BidirectionalBFSTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_BidirectionalBFS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_BidirectionalBFS-BidirectionalBFSTest.obj `if test -f 'Graph/BidirectionalBFSTest.cpp'; then $(CYGPATH_W) 'Graph/BidirectionalBFSTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/BidirectionalBFSTest.cpp'; fi`

Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.o: Graph/ConstrainedBFSVisitorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.o -MD -MP -MF Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Tpo -c -o Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.o `test -f 'Graph/ConstrainedBFSVisitorTest.cpp' || echo '$(srcdir)/'`Graph/ConstrainedBFSVisitorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Tpo Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/ConstrainedBFSVisitorTest.cpp' object='Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.o `test -f 'Graph/ConstrainedBFSVisitorTest.cpp' || echo '$(srcdir)/'`Graph/ConstrainedBFSVisitorTest.cpp

Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.obj: Graph/ConstrainedBFSVisitorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.obj -MD -MP -MF Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Tpo -c -o Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.obj `if test -f 'Graph/ConstrainedBFSVisitorTest.cpp'; then $(CYGPATH_W) 'Graph/ConstrainedBFSVisitorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/ConstrainedBFSVisitorTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Tpo Graph/$(DEPDIR)/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/ConstrainedBFSVisitorTest.cpp' object='Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_ConstrainedBFSVisitor-ConstrainedBFSVisitorTest.obj `if test -f 'Graph/ConstrainedBFSVisitorTest.cpp'; then $(CYGPATH_W) 'Graph/ConstrainedBFSVisitorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/ConstrainedBFSVisitorTest.cpp'; fi`

Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.o: Graph/ConstrainedBidiBFSVisitorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBidiBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.o -MD -MP -MF Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Tpo -c -o Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.o `test -f 'Graph/ConstrainedBidiBFSVisitorTest.cpp' || echo '$(srcdir)/'`Graph/ConstrainedBidiBFSVisitorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Tpo Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/ConstrainedBidiBFSVisitorTest.cpp' object='Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBidiBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.o `test -f 'Graph/ConstrainedBidiBFSVisitorTest.cpp' || echo '$(srcdir)/'`Graph/ConstrainedBidiBFSVisitorTest.cpp

Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.obj: Graph/ConstrainedBidiBFSVisitorTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBidiBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.obj -MD -MP -MF Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Tpo -c -o Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.obj `if test -f 'Graph/ConstrainedBidiBFSVisitorTest.cpp'; then $(CYGPATH_W) 'Graph/ConstrainedBidiBFSVisitorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/ConstrainedBidiBFSVisitorTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Tpo Graph/$(DEPDIR)/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/ConstrainedBidiBFSVisitorTest.cpp' object='Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_ConstrainedBidiBFSVisitor_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_ConstrainedBidiBFSVisitor-ConstrainedBidiBFSVisitorTest.obj `if test -f 'Graph/ConstrainedBidiBFSVisitorTest.cpp'; then $(CYGPATH_W) 'Graph/ConstrainedBidiBFSVisitorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/ConstrainedBidiBFSVisitorTest.cpp'; fi`

Graph/graph_HashGraph-HashGraphTest.o: Graph/HashGraphTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_HashGraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_HashGraph-HashGraphTest.o -MD -MP -MF Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Tpo -c -o Graph/graph_HashGraph-HashGraphTest.o `test -f 'Graph/HashGraphTest.cpp' || echo '$(srcdir)/'`Graph/HashGraphTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Tpo Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/HashGraphTest.cpp' object='Graph/graph_HashGraph-HashGraphTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_HashGraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_HashGraph-HashGraphTest.o `test -f 'Graph/HashGraphTest.cpp' || echo '$(srcdir)/'`Graph/HashGraphTest.cpp

Graph/graph_HashGraph-HashGraphTest.obj: Graph/HashGraphTest.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_HashGraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Graph/graph_HashGraph-HashGraphTest.obj -MD -MP -MF Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Tpo -c -o Graph/graph_HashGraph-HashGraphTest.obj `if test -f 'Graph/HashGraphTest.cpp'; then $(CYGPATH_W) 'Graph/HashGraphTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/HashGraphTest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Tpo Graph/$(DEPDIR)/graph_HashGraph-HashGraphTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Graph/HashGraphTest.cpp' object='Graph/graph_HashGraph-HashGraphTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(graph_HashGraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Graph/graph_HashGraph-HashGraphTest.obj `if test -f 'Graph/HashGraphTest.cpp'; then $(CYGPATH_W) 'Graph/HashGraphTest.cpp'; else $(CYGPATH_W) '$(srcdir)/Graph/HashGraphTest.cpp'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
common_stringutil.log: common_stringutil$(EXEEXT)
	@p='common_stringutil$(EXEEXT)'; \
	b='common_stringutil'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
common_histogram.log: common_histogram$(EXEEXT)
	@p='common_histogram$(EXEEXT)'; \
	b='common_histogram'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
common_bitutil.log: common_bitutil$(EXEEXT)
	@p='common_bitutil$(EXEEXT)'; \
	b='common_bitutil'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
common_kmer.log: common_kmer$(EXEEXT)
	@p='common_kmer$(EXEEXT)'; \
	b='common_kmer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
common_sequence.log: common_sequence$(EXEEXT)
	@p='common_sequence$(EXEEXT)'; \
	b='common_sequence'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
common_KmerIterator.log: common_KmerIterator$(EXEEXT)
	@p='common_KmerIterator$(EXEEXT)'; \
	b='common_KmerIterator'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
common_sam.log: common_sam$(EXEEXT)
	@p='common_sam$(EXEEXT)'; \
	b='common_sam'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
BloomFilter.log: BloomFilter$(EXEEXT)
	@p='BloomFilter$(EXEEXT)'; \
	b='BloomFilter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Konnector_DBGBloom.log: Konnector_DBGBloom$(EXEEXT)
	@p='Konnector_DBGBloom$(EXEEXT)'; \
	b='Konnector_DBGBloom'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Konnector_DBGBloomAlgorithms.log: Konnector_DBGBloomAlgorithms$(EXEEXT)
	@p='Konnector_DBGBloomAlgorithms$(EXEEXT)'; \
	b='Konnector_DBGBloomAlgorithms'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
graph_ConstrainedBFSVisitor.log: graph_ConstrainedBFSVisitor$(EXEEXT)
	@p='graph_ConstrainedBFSVisitor$(EXEEXT)'; \
	b='graph_ConstrainedBFSVisitor'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
graph_BidirectionalBFS.log: graph_BidirectionalBFS$(EXEEXT)
	@p='graph_BidirectionalBFS$(EXEEXT)'; \
	b='graph_BidirectionalBFS'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
graph_AllPathsSearch.log: graph_AllPathsSearch$(EXEEXT)
	@p='graph_AllPathsSearch$(EXEEXT)'; \
	b='graph_AllPathsSearch'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
graph_HashGraph.log: graph_HashGraph$(EXEEXT)
	@p='graph_HashGraph$(EXEEXT)'; \
	b='graph_HashGraph'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
graph_ConstrainedBidiBFSVisitor.log: graph_ConstrainedBidiBFSVisitor$(EXEEXT)
	@p='graph_ConstrainedBidiBFSVisitor$(EXEEXT)'; \
	b='graph_ConstrainedBidiBFSVisitor'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Konnector_konnector.log: Konnector_konnector$(EXEEXT)
	@p='Konnector_konnector$(EXEEXT)'; \
	b='Konnector_konnector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f Common/$(DEPDIR)/$(am__dirstamp)
	-rm -f Common/$(am__dirstamp)
	-rm -f Graph/$(DEPDIR)/$(am__dirstamp)
	-rm -f Graph/$(am__dirstamp)
	-rm -f Konnector/$(DEPDIR)/$(am__dirstamp)
	-rm -f Konnector/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf Common/$(DEPDIR) Graph/$(DEPDIR) Konnector/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf Common/$(DEPDIR) Graph/$(DEPDIR) Konnector/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
